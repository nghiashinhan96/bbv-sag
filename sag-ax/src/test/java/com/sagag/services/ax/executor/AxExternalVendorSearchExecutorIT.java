package com.sagag.services.ax.executor;

import static org.junit.Assert.assertNotNull;

import java.util.Arrays;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.sagag.services.article.api.domain.vendor.VendorDto;
import com.sagag.services.ax.AxApplication;
import com.sagag.services.common.annotation.EshopIntegrationTest;
import com.sagag.services.common.enums.SupportedAffiliate;

@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest(classes = { AxApplication.class })
@EshopIntegrationTest
public class AxExternalVendorSearchExecutorIT {

  @Autowired
  private AxExternalVendorSearchExecutor executor;

  @Test
  public void searchVendorsShouldReturnVendorsGivenArticleIds() {
    List<String> articleIds = Arrays.asList("1001687591", "1001661641", "1001563900", "1001310585",
        "1001310558", "1001424834", "1001310692", "1001421972", "1001310374", "1001312420",
        "1001418066", "1001312903", "1001312303", "1001312358", "1001436818", "1001417716",
        "1001416213", "1001423282", "1001422191", "1001310052", "1001436067", "1001415981",
        "1001421672", "1001705326", "1001705328", "1001312321", "1001310039", "1001686425",
        "1001687592", "1001686413", "1001516516", "1001497013", "1001523109", "1001516862",
        "1001523108", "1001519004", "1001497060", "1001129965", "1001144457", "1001144462",
        "1001129950", "1001463328", "1001516726", "1001424852", "1001417527", "1001423532",
        "1001496928", "1001312756", "1001423168", "1001313028", "1001312760", "1001312382",
        "1001312935", "1001312750", "1001421781", "1001436542", "1001313530", "1001692108",
        "1001688777", "1001667748", "1001666782", "1001684617", "1001688778", "1001423300",
        "1001418058", "1001423396", "1001424740", "1001436031", "1001424855", "1001421772",
        "1001418065", "1001426421", "1001436563", "1001417626", "1001416212", "1001421671",
        "1001310679", "1001129957", "1000890629", "1001705481", "1001688779", "1001687589",
        "1001571943", "1001516497", "1001422242", "1001422260", "1001430621", "1001422321",
        "1001423231", "1001423330", "1001310255", "1001309994", "1001421670", "1001312795",
        "1001218343", "1001144464", "1001129963", "1001312419", "1001708520", "1001686412",
        "1001687590", "1001572761", "1001571944", "1001218341", "1001501962", "1001497096",
        "1001516387", "1001705327", "1001705329", "1001310567", "1001311543", "1001423397",
        "1001419657", "1001310152", "1001310637", "1001419656", "1001312323", "1001310218",
        "1001422188", "1001418085", "1001310602", "1001312803", "1001310452", "1001312825",
        "1001571947", "1001417827", "1001423387", "1001422850", "1001312973", "1001309991",
        "1001436566", "1001436541", "1001423490", "1001421754", "1001417508", "1001310293",
        "1001310672", "1001313534", "1001312766", "1001313543", "1001312882", "1001516386",
        "1001424856", "1001421711", "1001418060", "1001419662", "1001422726", "1001418084",
        "1001312978", "1001688776", "1001516517", "1001494153", "1001571946", "1001572742",
        "1001571945", "1001563901", "1001424845", "1001429583", "1001419658", "1001416204",
        "1001416210", "1001422121", "1001424844", "1001129961", "1001310686", "1001429044",
        "1001312982", "1001419659", "1001417520", "1001310648", "1001419661", "1001218344",
        "1001310194", "1001313209", "1001686408", "1001671058", "1001667747", "1001312374",
        "1001312322", "1001312769", "1001218342", "1001313031", "1001130687", "1001144463",
        "1001686411", "1001591416", "1001539525", "1001539423", "1001496839", "1001494129",
        "1001422259", "1001426405", "1001419660", "1001418063", "1001418061", "1001418059",
        "1001313476", "1001417929", "1001423533", "1001310544", "1001313533", "1001310322",
        "1001312749", "1001312764", "1001310685", "1001310354", "1001312381", "1001416209",
        "1001312822", "1001708625", "1001310075");
    List<VendorDto> results =
        executor.execute(SupportedAffiliate.DERENDINGER_AT.getCompanyName(), articleIds);
    assertNotNull(results);
  }
}
