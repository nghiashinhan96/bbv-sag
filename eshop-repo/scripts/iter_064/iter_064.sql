--- Create FEEDBACK table
CREATE TABLE [dbo].[FEEDBACK](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[USER_ID] [bigint] NOT NULL,
	[SALES_ID] [bigint] NULL,
	[STATUS_ID] [int] NOT NULL,
	[TOPIC_ID] [int] NOT NULL,
	[ORG_ID] [int] NOT NULL,
	[USER_INFORMATION] varchar(max) NULL,
	[TECHNICAL_INFORMATION] varchar(max) NULL,
	[FEEDBACK_MESSAGE] varchar(3000) NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL DEFAULT getdate(),
	[CREATED_USER_ID] [bigint] NOT NULL,
	[MODIFIED_DATE] [datetime] NULL,
	[MODIFIED_USER_ID] [bigint] NULL,
 CONSTRAINT [PK_FEEDBACK] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

--- Add foreign key for FEEDBACK table
ALTER TABLE dbo.FEEDBACK ADD CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES dbo.ESHOP_USER (ID);
ALTER TABLE dbo.FEEDBACK ADD CONSTRAINT FK_SALES_ID FOREIGN KEY (SALES_ID) REFERENCES dbo.ESHOP_USER (ID);
ALTER TABLE dbo.FEEDBACK ADD CONSTRAINT FK_ORG_ID FOREIGN KEY (ORG_ID) REFERENCES dbo.ORGANISATION (ID);
ALTER TABLE dbo.FEEDBACK ADD CONSTRAINT FK_STATUS_ID FOREIGN KEY (STATUS_ID) REFERENCES dbo.FEEDBACK_STATUS (ID);
ALTER TABLE dbo.FEEDBACK ADD CONSTRAINT FK_TOPIC_ID FOREIGN KEY (TOPIC_ID) REFERENCES dbo.FEEDBACK_TOPIC (ID);

--- Create FEEDBACK_STATUS table
CREATE TABLE [dbo].[FEEDBACK_STATUS](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[STATUS_CODE] [varchar](50) NOT NULL,
	[DESCRIPTION] [varchar](500) NULL,
 CONSTRAINT [PK_FEEDBACK_STATUS] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

--- Create FEEDBACK_TOPIC table
CREATE TABLE [dbo].[FEEDBACK_TOPIC](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TOPIC_CODE] [varchar](50) NOT NULL,
	[DESCRIPTION] [varchar](500) NULL,
 CONSTRAINT [PK_FEEDBACK_TOPIC] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

--- Create FEEDBACK_TOPIC_DEPARTMENT table
CREATE TABLE [dbo].[FEEDBACK_TOPIC_DEPARTMENT](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TOPIC_ID] [int] NOT NULL,
	[DEPARTMENT_ID] [int] NOT NULL,
 CONSTRAINT [PK_FEEDBACK_TOPIC_DEPARTMENT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

--- Create FEEDBACK_DEPARTMENT table
CREATE TABLE [dbo].[FEEDBACK_DEPARTMENT](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[DEPARTMENT_CODE] [varchar](100) NOT NULL,
	[DESCRIPTION] [varchar](500) NULL,
	[SUPPORTED_AFFILIATE_ID] [int] NULL,
 CONSTRAINT [PK_FEEDBACK_DEPARTMENT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

--- Create FEEDBACK_DEPARTMENT_CONTACT table
CREATE TABLE [dbo].[FEEDBACK_DEPARTMENT_CONTACT](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[DEPARTMENT_ID] [int] NOT NULL,
	[TYPE] [varchar](200) NOT NULL,
	[VALUE] [varchar](500) NOT NULL
 CONSTRAINT [PK_FEEDBACK_DEPARTMENT_CONTACT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

--- Add foreign key for FEEDBACK_DEPARTMENT_CONTACT table
ALTER TABLE dbo.FEEDBACK_DEPARTMENT_CONTACT ADD CONSTRAINT FK_DEPARTMENT_ID FOREIGN KEY (DEPARTMENT_ID) REFERENCES dbo.FEEDBACK_DEPARTMENT (ID);

--- Create V_FEEDBACK view
CREATE VIEW V_FEEDBACK AS
  SELECT DISTINCT 
    F.ID AS ID,
    F.USER_ID AS USER_ID,
    NU.USERNAME AS USER_NAME,
    NU.EMAIL AS EMAIL,
    F.SALES_ID AS SALES_ID,
    SU.USERNAME AS SALES_USER_NAME,
    SU.EMAIL AS SALES_EMAIL,
    F.ORG_ID AS ORG_ID,
    ORG.ORG_CODE AS ORG_CODE,
    ORG.NAME AS ORG_NAME,
    F.STATUS_ID AS STATUS_ID,
    FS.STATUS_CODE AS STATUS_CODE,
    F.TOPIC_ID AS TOPIC_ID,
    FT.TOPIC_CODE AS TOPIC_CODE
  FROM FEEDBACK F
  JOIN ESHOP_USER NU ON NU.ID = F.USER_ID
  LEFT JOIN ESHOP_USER SU ON SU.ID = F.SALES_ID
  JOIN FEEDBACK_STATUS FS ON FS.ID = F.STATUS_ID
  JOIN FEEDBACK_TOPIC FT ON FT.ID = F.TOPIC_ID
  JOIN ORGANISATION ORG ON ORG.ID = F.ORG_ID

--- Add column NO_REPLY_EMAIL for SUPPORTED_AFFILIATE table
ALTER TABLE SUPPORTED_AFFILIATE ADD [NO_REPLY_EMAIL] [varchar](255) NULL;
