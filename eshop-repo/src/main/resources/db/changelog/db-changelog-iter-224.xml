<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet author="CONNECT_APP" id="LEGAL_DOCTYPE_V1_0">
        <sql>
            IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='LEGAL_DOCTYPE')
            BEGIN
                CREATE TABLE dbo.LEGAL_DOCTYPE (
                    ID bigint IDENTITY(1,1) NOT NULL,
                    DOCTYPE_REF int NULL,
                    CREATED_USER_ID bigint NULL,
                    CREATED_DATE datetime NULL,
                    MODIFIED_USER_ID bigint NULL,
                    MODIFIED_DATE datetime NULL,
                    CONSTRAINT PK_LEGAL_DOCTYPE PRIMARY KEY (ID),
                    CONSTRAINT UQ_LEGAL_DOCTYPE UNIQUE (ID)
                )

                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCTYPE_DOCTYPE_REF ON dbo.LEGAL_DOCTYPE (DOCTYPE_REF ASC)
            END
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="LEGAL_DOCUMENT_V1_0">
        <sql>
            IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='LEGAL_DOCUMENT')
            BEGIN
                CREATE TABLE dbo.LEGAL_DOCUMENT (
                    ID bigint IDENTITY(1,1) NOT NULL,
                    LEGAL_DOCTYPE_ID bigint NOT NULL,
                    COUNTRY varchar(5) DEFAULT 'CH',
                    LANGUAGE varchar(5) DEFAULT 'DE',
                    DOCUMENT_NAME varchar(255) NULL,
                    SUMMARY varchar(255) NULL,
                    DOCUMENT text NULL,
                    PDF_URL varchar(2048) NULL,
                    CONSTRAINT PK_LEGAL_DOCUMENT PRIMARY KEY (ID),
                    CONSTRAINT UQ_LEGAL_DOCUMENT UNIQUE (ID),
                    CONSTRAINT UQ_LEGAL_DOCUMENT_LEGAL_DOCTYPE_ID_LANGUAGE UNIQUE (LEGAL_DOCTYPE_ID, LANGUAGE)
                )

                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCUMENT_LEGAL_DOCTYPE_ID ON dbo.LEGAL_DOCUMENT (LEGAL_DOCTYPE_ID ASC)
                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCUMENT_COUNTRY ON dbo.LEGAL_DOCUMENT (COUNTRY ASC)
                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCUMENT_LANGUAGE ON dbo.LEGAL_DOCUMENT (LANGUAGE ASC)

                ALTER TABLE dbo.LEGAL_DOCUMENT ADD CONSTRAINT FK_LEGAL_DOCUMENT_LEGAL_DOCTYPE_ID FOREIGN KEY (LEGAL_DOCTYPE_ID) REFERENCES dbo.LEGAL_DOCTYPE(ID)
            END
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG_V1_0">
        <sql>
            IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG')
            BEGIN
                CREATE TABLE dbo.LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG (
                    ID bigint IDENTITY(1,1) NOT NULL,
                    AFFILIATE_ID bigint NOT NULL,
                    LEGAL_DOCTYPE_ID bigint NOT NULL,
                    SORT int NOT NULL,
                    DATE_VALID_FROM date NOT NULL,
                    ACCEPTANCE_PERIOD_DAYS int NOT NULL,
                    STATUS int NULL,
                    CREATED_USER_ID bigint NULL,
                    CREATED_DATE datetime NULL,
                    MODIFIED_USER_ID bigint NULL,
                    MODIFIED_DATE datetime NULL,
                    CONSTRAINT PK_LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG PRIMARY KEY (ID),
                    CONSTRAINT UQ_LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG UNIQUE (ID),
                    CONSTRAINT UQ_LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG_AFFILIATE_ID_LEGAL_DOCTYPE_ID UNIQUE (AFFILIATE_ID, LEGAL_DOCTYPE_ID)
                )

                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG_AFFILIATE_ID on dbo.LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG (AFFILIATE_ID ASC)
                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG_LEGAL_DOCTYPE_ID on dbo.LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG (LEGAL_DOCTYPE_ID ASC)

                ALTER TABLE dbo.LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG ADD CONSTRAINT FK_LEGAL_DOCTYPE_AFFILIATE_ASSIGNED_LOG_LEGAL_DOCTYPE_ID FOREIGN KEY (LEGAL_DOCTYPE_ID) REFERENCES dbo.LEGAL_DOCTYPE(ID)
            END
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG_V1_0">
        <sql>
            IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG')
            BEGIN
                CREATE TABLE dbo.LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG (
                    ID bigint IDENTITY(1,1) NOT NULL,
                    AFFILIATE_ID bigint NOT NULL,
                    LEGAL_DOCTYPE_ID bigint NOT NULL,
                    CUSTOMER_ID bigint NOT NULL,
                    USER_ID bigint NULL,
                    TIME_ACCEPTED datetime NULL,
                    CONSTRAINT PK_LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG PRIMARY KEY (ID),
                    CONSTRAINT UQ_LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG UNIQUE (ID),
                    CONSTRAINT UQ_LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG_LEGAL_DOCTYPE_ID_CUSTOMER_ID UNIQUE (LEGAL_DOCTYPE_ID, CUSTOMER_ID)
                )

                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG_LEGAL_DOCTYPE_ID on dbo.LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG (LEGAL_DOCTYPE_ID ASC)
                CREATE NONCLUSTERED INDEX IDX_LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG_CUSTOMER_ID on dbo.LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG (CUSTOMER_ID ASC)

                ALTER TABLE dbo.LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG ADD CONSTRAINT FK_LEGAL_DOCTYPE_CUSTOMER_ACCEPTED_LOG_LEGAL_DOCTYPE_ID FOREIGN KEY (LEGAL_DOCTYPE_ID) REFERENCES dbo.LEGAL_DOCTYPE(ID)
            END
        </sql>
    </changeSet>
	<changeSet author="CONNECT_APP" id="ITER_224_ADD_MISSING_GTM_CONFIG_FOR_RELATED_ORG_COLLECTION">
		<sql>
			DECLARE @GTM_ORG_COLLECTION_SETTING_TEMP TABLE (collectionId int)
			DECLARE @settingKeyGTM nvarchar(MAX) = N'google_tag_manager_setting'
			INSERT INTO @GTM_ORG_COLLECTION_SETTING_TEMP
				SELECT COLLECTION_ID FROM dbo.ORG_COLLECTION_SETTINGS WHERE SETTING_KEY = @settingKeyGTM AND SETTING_VALUE IS NOT NULL DECLARE @collectionId int
			
			DECLARE @collectionIdCur int
			DECLARE db_cursor CURSOR FOR SELECT collectionId FROM @GTM_ORG_COLLECTION_SETTING_TEMP
			OPEN db_cursor FETCH NEXT FROM db_cursor INTO @collectionIdCur 
			WHILE @@FETCH_STATUS = 0 
			BEGIN 	
			  DECLARE @settingValue nvarchar(MAX) = (SELECT TOP 1 SETTING_VALUE FROM dbo.ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @collectionIdCur AND SETTING_KEY = @settingKeyGTM AND SETTING_VALUE IS NOT NULL)
			  INSERT INTO dbo.ORG_COLLECTION_SETTINGS
					SELECT ID,@settingKeyGTM ,@settingValue FROM dbo.ORGANISATION_COLLECTION org WHERE org.AFFILIATE_ID=@collectionIdCur AND org.AFFILIATE_ID &lt;&gt; ID AND NOT EXISTS(SELECT * FROM dbo.ORG_COLLECTION_SETTINGS ocs WHERE org.id=ocs.COLLECTION_ID AND ocs.SETTING_KEY=@settingKeyGTM)
			  FETCH NEXT FROM db_cursor INTO @collectionIdCur
			END 
			CLOSE db_cursor
			DEALLOCATE db_cursor

		</sql>
	</changeSet>
	
	<changeSet author="CONNECT_APP" id="ITER_224_ALTER_VARCHAR_COLUMN">
		<sql>
			DROP INDEX IF EXISTS [IDX_TOUR_TIME_CUST_NR] ON dbo.TOUR_TIME;
			DROP INDEX IF EXISTS [INX_ESHOP_CART_ITEM_USER_ID] ON dbo.ESHOP_CART_ITEM;
			DROP INDEX IF EXISTS [INX_ESHOP_CART_ITEM_USER_ID_CUSTOMER_NR] ON dbo.ESHOP_CART_ITEM;
			DROP INDEX IF EXISTS [IDX_ESHOP_USER_USERNAME] ON dbo.ESHOP_USER;
			DROP INDEX IF EXISTS [IDX_VEHICLE_HISTORY_VEH_ID] ON dbo.VEHICLE_HISTORY;
			DROP VIEW IF EXISTS dbo.V_USER_VEHICLE_HISTORY;
			DROP VIEW IF EXISTS dbo.V_USER_DETAIL;
			DROP VIEW IF EXISTS dbo.V_USER_ARTICLE_HISTORY;
			ALTER TABLE dbo.EXTERNAL_USER DROP CONSTRAINT IF EXISTS DF_EXTERNAL_USER_EXTERNAL_APP;
		
			ALTER TABLE dbo.TOUR_TIME ALTER COLUMN CUSTOMER_NUMBER nvarchar(20) NOT NULL;
			ALTER TABLE dbo.ESHOP_CART_ITEM ALTER COLUMN USER_ID nvarchar(20) NULL;
			ALTER TABLE dbo.ESHOP_USER ALTER COLUMN USERNAME nvarchar(255) NULL;
			ALTER TABLE dbo.VEHICLE_HISTORY ALTER COLUMN VEH_ID nvarchar(50) NOT NULL;
			ALTER TABLE dbo.EXTERNAL_USER ALTER COLUMN EXTERNAL_APP nvarchar(255) NOT NULL;
			ALTER TABLE dbo.ORG_COLLECTION_SETTINGS ALTER COLUMN SETTING_KEY nvarchar(255) NOT NULL;
			
			CREATE NONCLUSTERED INDEX IDX_TOUR_TIME_CUST_NR ON dbo.TOUR_TIME (  CUSTOMER_NUMBER ASC  )  
			 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
			 ON [PRIMARY ];
			 
			CREATE NONCLUSTERED INDEX INX_ESHOP_CART_ITEM_USER_ID ON dbo.ESHOP_CART_ITEM (  USER_ID ASC  )  
			 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
			 ON [PRIMARY ];
			CREATE NONCLUSTERED INDEX INX_ESHOP_CART_ITEM_USER_ID_CUSTOMER_NR ON dbo.ESHOP_CART_ITEM (  USER_ID ASC  , CUSTOMER_NR ASC  )  
			 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
			 ON [PRIMARY ];
			
			CREATE NONCLUSTERED INDEX IDX_ESHOP_USER_USERNAME ON dbo.ESHOP_USER (  USERNAME ASC  )  
			 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
			 ON [PRIMARY ];
			
			CREATE NONCLUSTERED INDEX IDX_VEHICLE_HISTORY_VEH_ID ON dbo.VEHICLE_HISTORY (  VEH_ID ASC  )  
			 WITH (  PAD_INDEX = OFF ,FILLFACTOR = 100  ,SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , STATISTICS_NORECOMPUTE = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON  )
			 ON [PRIMARY ];
			
			
			CREATE VIEW dbo.V_USER_VEHICLE_HISTORY with schemabinding AS
			        SELECT 
			          UVH.ID AS ID,
			          U.ID AS USER_ID,
			          U.USERNAME AS USER_NAME,
			          U.FIRST_NAME AS FIRST_NAME,
			          U.LAST_NAME AS LAST_NAME,
			          CONCAT(U.LAST_NAME, ' ', U.FIRST_NAME) AS FULL_NAME,
			          OG.ORGANISATION_ID AS ORG_ID,
			          O.ORG_CODE AS ORG_CODE,
			          VH.VEH_ID AS VEHICLE_ID,
			          VH.VEH_NAME AS VEHICLE_NAME,
			          UVH.SEARCH_TERM AS SEARCH_TERM,
			          UVH.SEARCH_MODE AS SEARCH_MODE,
			          UVH.FROM_SOURCE AS FROM_SOURCE,
			          UVH.SELECT_DATE AS SELECT_DATE
			          from
			          dbo.VEHICLE_HISTORY VH
			          JOIN dbo.USER_VEHICLE_HISTORY UVH ON VH.ID = UVH.VEH_HISTORY_ID
			          JOIN dbo.ESHOP_USER U ON UVH.USER_ID = U.ID
			          JOIN dbo.GROUP_USER GU ON
			          U.ID = GU.USER_ID
			          JOIN dbo.ESHOP_GROUP G ON GU.GROUP_ID = G.ID
			          JOIN
			          dbo.GROUP_ROLE GR ON GR.GROUP_ID = G.ID
			          JOIN dbo.ESHOP_ROLE R ON
			          GR.ROLE_ID = R.ID
			          JOIN dbo.ORGANISATION_GROUP OG ON G.ID =
			          OG.GROUP_ID
			          JOIN dbo.ORGANISATION O ON O.ID = OG.ORGANISATION_ID
			          JOIN dbo.LOGIN L ON L.USER_ID = U.ID
			          JOIN dbo.USER_SETTINGS US ON
			          US.ID = U.SETTING
			          JOIN dbo.SALUTATION SL ON SL.ID = U.SALUTATION
			          WHERE L.IS_USER_ACTIVE = 1;
			
			CREATE VIEW [dbo].[V_USER_DETAIL]
					with schemabinding
					AS
					SELECT U.ID AS USER_ID,
					U.USERNAME AS USER_NAME,
					U.EMAIL AS USER_EMAIL,
					U.FIRST_NAME AS FIRST_NAME,
					U.LAST_NAME AS LAST_NAME,
					U.PHONE AS TELEPHONE,
					US.ID AS USER_SETTING_ID,
					U.TYPE AS USER_TYPE,
					US.SALE_ON_BEHALF_OF AS SALE_ON_BEHALF_OF, -- deprecated
					R.ID AS	ROLE_ID,
					R.NAME AS ROLE_NAME,
					G.ID AS GROUP_ID,
					G.NAME AS GROUP_NAME,
					OG.ORGANISATION_ID AS ORG_ID,
					O.PARENT_ID AS ORG_PARENT_ID,
					O.ORG_CODE AS ORG_CODE,
					O.SHORTNAME AS ORG_SHORT_NAME,
					O.NAME AS ORG_NAME,
					O.ORDER_SETTINGS_ID AS ORG_SETTINGS_ID,
					SL.CODE AS SALUT_CODE,
					SL.ID AS SALUT_ID,
					L.FIRST_LOGIN_DATE AS FIRST_LOGIN_DATE,
					U.SIGN_IN_DATE AS LAST_LOGIN_DATE,
					U.LANGUAGE AS LANGUAGE_ID,
					U.NEWSLETTER AS NEWSLETTER
					from
					dbo.ESHOP_USER U
					JOIN dbo.GROUP_USER GU ON
					U.ID = GU.USER_ID
					JOIN dbo.ESHOP_GROUP G ON GU.GROUP_ID = G.ID
					JOIN
					dbo.GROUP_ROLE GR ON GR.GROUP_ID = G.ID
					JOIN dbo.ESHOP_ROLE R ON
					GR.ROLE_ID = R.ID
					JOIN dbo.ORGANISATION_GROUP OG ON G.ID =
					OG.GROUP_ID
					JOIN dbo.ORGANISATION O ON O.ID = OG.ORGANISATION_ID
					JOIN dbo.LOGIN L ON L.USER_ID = U.ID
					JOIN dbo.USER_SETTINGS US ON
					US.ID = U.SETTING
					JOIN dbo.SALUTATION SL ON SL.ID = U.SALUTATION
					WHERE L.IS_USER_ACTIVE = 1;
			
		CREATE VIEW dbo.V_USER_ARTICLE_HISTORY with schemabinding AS
	        SELECT 
	          UAH.ID AS ID,
	          U.ID AS USER_ID,
	          U.USERNAME AS USER_NAME,
	          U.FIRST_NAME AS FIRST_NAME,
	          U.LAST_NAME AS LAST_NAME,
	          CONCAT(U.LAST_NAME, ' ', U.FIRST_NAME) AS FULL_NAME,
	          OG.ORGANISATION_ID AS ORG_ID,
	          O.ORG_CODE AS ORG_CODE,
	          AH.ART_ID AS ARTICLE_ID,
	          AH.ART_NUMBER AS ARTNR_DISPLAY,
	          UAH.SEARCH_TERM AS SEARCH_TERM,
	          UAH.RAW_SEARCH_TERM as RAW_SEARCH_TERM,
	          UAH.SEARCH_MODE AS SEARCH_MODE,
	          UAH.FROM_SOURCE AS FROM_SOURCE,
	          UAH.SELECT_DATE AS SELECT_DATE,
	          CONCAT(UAH.SEARCH_TERM, COALESCE(' => ' + NULLIF(AH.ART_NUMBER, ''), '')) AS SEARCH_TERM_WITH_ART_NR
	          from
	          dbo.ARTICLE_HISTORY AH
	          JOIN dbo.USER_ARTICLE_HISTORY UAH ON AH.ID = UAH.ART_HISTORY_ID
	          JOIN dbo.ESHOP_USER U ON UAH.USER_ID = U.ID
	          JOIN dbo.GROUP_USER GU ON
	          U.ID = GU.USER_ID
	          JOIN dbo.ESHOP_GROUP G ON GU.GROUP_ID = G.ID
	          JOIN
	          dbo.GROUP_ROLE GR ON GR.GROUP_ID = G.ID
	          JOIN dbo.ESHOP_ROLE R ON
	          GR.ROLE_ID = R.ID
	          JOIN dbo.ORGANISATION_GROUP OG ON G.ID =
	          OG.GROUP_ID
	          JOIN dbo.ORGANISATION O ON O.ID = OG.ORGANISATION_ID
	          JOIN dbo.LOGIN L ON L.USER_ID = U.ID
	          JOIN dbo.USER_SETTINGS US ON
	          US.ID = U.SETTING
	          JOIN dbo.SALUTATION SL ON SL.ID = U.SALUTATION
	          WHERE L.IS_USER_ACTIVE = 1; 
		</sql>
	</changeSet>
	
	<changeSet author="CONNECT_APP" id="ITER_224_ADD_MISSING_INDEX">
		<sql>
			CREATE NONCLUSTERED INDEX IDX_GROUP_USER_ID_INCLUDE_GROUP_ID
			ON dbo.GROUP_USER (USER_ID)
			INCLUDE (GROUP_ID);
			
			
			CREATE NONCLUSTERED INDEX IDX_BASKET_HISTORY_ACTIVE_INCLUDE_ORGANISATION_ID_CREATED_USER_ID
			ON dbo.BASKET_HISTORY (ACTIVE)
			INCLUDE (ORGANISATION_ID,CREATED_USER_ID);
			
			CREATE NONCLUSTERED INDEX IDX_ORGANISATION_GROUP_ORGANISATION_ID
			ON dbo.ORGANISATION_GROUP (ORGANISATION_ID);
			
		</sql>
	</changeSet>

</databaseChangeLog>
