<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <changeSet author="CONNECT_APP" id="ITER_171_INIT_FEEDBACK_TOPIC_ADD_DATA_SB">
        <sql>
        	TRUNCATE TABLE dbo.FEEDBACK_TOPIC
            INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PRICING_CARPARTS', 'Preise Personenwagen (Carparts)', 2)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('ORDERS_AVAILABILITY', 'Orders, Availability', 6)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('EASE_OF_USE', 'Ease of use', 7)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('MISSING_WRONG_DATA', 'Missing/wrong data (vehicle, part, range of goods etc.)', 8)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('LICENSING', 'Licensing (HaynesPro, VIN etc.)', 9)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('SYSTEM_BROWSER_INTERFACES', 'System, Browser, Interfaces', 10)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PROFILE_SETTINGS', 'Profile, Settings', 11)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('OTHER', 'Other...', 12)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PRICING_WHEELS', 'Preise Reifen (Wheels)', 1)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PRICING_MATIK', 'Preise Nutzfahrzeuge (Matik)', 3)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PRICING_WSP', 'Preise Fahrzeug unabh√§ngige Artikel (WSP)', 4)
			INSERT INTO FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PRICING_IS', 'Preise Workshop Equipment (IS)', 5);
            
        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP" id="ITER_171_INIT_FEEDBACK_STATUS_SB">
        <sql>
            INSERT INTO FEEDBACK_STATUS(STATUS_CODE, DESCRIPTION) VALUES ('NOT_STARTED', 'Not Started')
	        INSERT INTO FEEDBACK_STATUS(STATUS_CODE, DESCRIPTION) VALUES ('ASSIGNED', 'Assigned')
	        INSERT INTO FEEDBACK_STATUS(STATUS_CODE, DESCRIPTION) VALUES ('IN_PROGRESS', 'In Progress')
	        INSERT INTO FEEDBACK_STATUS(STATUS_CODE, DESCRIPTION) VALUES ('CROSS_CHECKING', 'Cross Checking')
	        INSERT INTO FEEDBACK_STATUS(STATUS_CODE, DESCRIPTION) VALUES ('DONE', 'Done')
        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP" id="ITER_171_TABLE_FEEDBACK_DEPARTMENT_ADD_DATA_SB">
    	<sql>
	   	    TRUNCATE TABLE dbo.FEEDBACK_DEPARTMENT
	        INSERT INTO FEEDBACK_DEPARTMENT(DEPARTMENT_CODE, DESCRIPTION) VALUES('DATA_MANAGEMENT', 'Pricing - Orders, Availability - Missing/wrong data')
	        INSERT INTO FEEDBACK_DEPARTMENT(DEPARTMENT_CODE, DESCRIPTION) VALUES('CONNECT_SERVICE_DESK', 'Other Connect feedback topics')
		</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_171_TABLE_FEEDBACK_DEPARTMENT_CONTACT_ADD_DATA_SB">
	    <sql>
	   	    TRUNCATE TABLE dbo.FEEDBACK_DEPARTMENT_CONTACT
	   	  	DECLARE @deptManagement INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='DATA_MANAGEMENT')
			DECLARE @connectServiceDesk INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='CONNECT_SERVICE_DESK')
	      	INSERT INTO FEEDBACK_DEPARTMENT_CONTACT(DEPARTMENT_ID,	TYPE, VALUE) VALUES(@deptManagement,'EMAIL', 'chau.le@bbv.vn')
	      	INSERT INTO FEEDBACK_DEPARTMENT_CONTACT(DEPARTMENT_ID,	TYPE, VALUE) VALUES(@connectServiceDesk,'EMAIL', 'chau.le@bbv.vn')
		</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_171_TABLE_FEEDBACK_TOPIC_DEPARTMENT_ADD_DATA_SB">
	    <sql>
	   	    TRUNCATE TABLE dbo.FEEDBACK_TOPIC_DEPARTMENT
	   	    
	   	    DECLARE @deptManagement INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='DATA_MANAGEMENT')
			DECLARE @connectServiceDesk INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='CONNECT_SERVICE_DESK')
			
			DECLARE @topicPricingCarparts INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PRICING_CARPARTS')
			DECLARE @topicOrderAvai INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='ORDERS_AVAILABILITY')
			DECLARE @topicEaseOfUse INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='EASE_OF_USE')
			DECLARE @topicDataIssue INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='MISSING_WRONG_DATA')
			DECLARE @topicLicense INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='LICENSING')
			DECLARE @topicSystemBrowserInterface INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='SYSTEM_BROWSER_INTERFACES')
			DECLARE @topicProfileSetting INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PROFILE_SETTINGS')
			DECLARE @topicOther INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='OTHER')
			DECLARE @topicPricingWheels INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PRICING_WHEELS')
			DECLARE @topicPricingMatik INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PRICING_MATIK')
			DECLARE @topicPricingWSP INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PRICING_WSP')
			DECLARE @topicPricingIS INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PRICING_IS')
			
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicPricingCarparts, @deptManagement)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicDataIssue, @deptManagement)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicOrderAvai, @deptManagement)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicEaseOfUse, @connectServiceDesk)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicLicense, @connectServiceDesk)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicSystemBrowserInterface, @connectServiceDesk)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicProfileSetting, @connectServiceDesk)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicOther, @connectServiceDesk)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicPricingWheels, @deptManagement)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicPricingMatik, @deptManagement)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicPricingWSP, @deptManagement)
			INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicPricingIS, @deptManagement)
		</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_171_MASTER_DATA_FOR_MESSAGE_SB">
	    <sql>
    		--Initialize data for MESSAGE_ACCESS_RIGHT
	   	    TRUNCATE TABLE dbo.MESSAGE_ACCESS_RIGHT
			INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('SALES','SALES',2,'Just for sales user')
			INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('CUSTOMER_ADMIN','ADMIN',1,'Just for customer admin')
			INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('CUSTOMER_NORMAL','NORMAL_USER',1,'Just for customer normal user')
			INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('CUSTOMER_ALL','ALL',1,'Just for customer admin and customer normal user')
			INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('ALL','ALL',3,'For all users')
		
            DECLARE @messageAccessRightSaleId INT = (SELECT ID FROM MESSAGE_ACCESS_RIGHT WHERE USER_GROUP='SALES')
            DECLARE @messageAccessRightCustomerAdminId INT = (SELECT ID FROM MESSAGE_ACCESS_RIGHT WHERE USER_GROUP='CUSTOMER_ADMIN')
            DECLARE @messageAccessRightCustomerNormalId INT = (SELECT ID FROM MESSAGE_ACCESS_RIGHT WHERE USER_GROUP='CUSTOMER_NORMAL')
            DECLARE @messageAccessRightCustomerAllId INT = (SELECT ID FROM MESSAGE_ACCESS_RIGHT WHERE USER_GROUP='CUSTOMER_ALL')
            DECLARE @messageAccessRightAllId INT = (SELECT ID FROM MESSAGE_ACCESS_RIGHT WHERE USER_GROUP='ALL')

            DECLARE @eshopRoleSaleId INT = (SELECT ID FROM ESHOP_ROLE WHERE NAME='SALES_ASSISTANT')
            DECLARE @eshopRoleUserAdminId INT = (SELECT ID FROM ESHOP_ROLE WHERE NAME='USER_ADMIN')
            DECLARE @eshopRoleNormalUserId INT = (SELECT ID FROM ESHOP_ROLE WHERE NAME='NORMAL_USER')

			--Initialize data for MESSAGE_ROLE_TYPE
			TRUNCATE TABLE dbo.MESSAGE_ROLE_TYPE
			INSERT INTO MESSAGE_ROLE_TYPE(ROLE_TYPE) VALUES('CUSTOMER')
			INSERT INTO MESSAGE_ROLE_TYPE(ROLE_TYPE) VALUES('SALES')
			INSERT INTO MESSAGE_ROLE_TYPE(ROLE_TYPE) VALUES('ALL')
			
			--Initialize data for MESSAGE_ACCESS_RIGHT_ROLE
			TRUNCATE TABLE dbo.MESSAGE_ACCESS_RIGHT_ROLE
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightSaleId, @eshopRoleSaleId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightCustomerAdminId, @eshopRoleUserAdminId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightCustomerNormalId,@eshopRoleNormalUserId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightCustomerAllId, @eshopRoleUserAdminId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightCustomerAllId, @eshopRoleNormalUserId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightAllId, @eshopRoleUserAdminId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightAllId, @eshopRoleSaleId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(@messageAccessRightAllId, @eshopRoleNormalUserId)
			
			--Initialize data for MESSAGE_STYLE
			TRUNCATE TABLE dbo.MESSAGE_STYLE
			INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('DEFAULT','Default type')
			INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('PRIMARY','Primary type')
			INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('SUCCESS','Success type')
			INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('WARNING','Warning type')
			INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('DANGER','Alert type')
			
			--Initialize data for MESSAGE_TYPE
			TRUNCATE TABLE dbo.MESSAGE_TYPE
			INSERT INTO MESSAGE_TYPE(TYPE,DESCRIPTION) VALUES('PANEL','Defined per shop')
			INSERT INTO MESSAGE_TYPE(TYPE,DESCRIPTION) VALUES('BANNER','Shown at the very top of the page on all pages except login')
			
			--Initialize data for MESSAGE_AREA
			TRUNCATE TABLE dbo.MESSAGE_AREA
			INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('LOGIN_PAGE',0,'For login page only')
			INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE',1,'For customer home page only')
			INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('SALES_HOME_PAGE',1,'For sales-home page only')
			INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('SHOPPING_BASKET_PAGE',1,'For shopping basket page only')
			INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('ORDER_CONFIRMATION_PAGE',1,'For order confirmation page only')
			INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('ALL',1,'For all interal pages except login')

            DECLARE @loginPageId INT = (SELECT ID FROM MESSAGE_AREA WHERE AREA='LOGIN_PAGE')
            DECLARE @customerHomePageId INT = (SELECT ID FROM MESSAGE_AREA WHERE AREA='CUSTOMER_HOME_PAGE')
            DECLARE @saleHomePageId INT = (SELECT ID FROM MESSAGE_AREA WHERE AREA='SALES_HOME_PAGE')
            DECLARE @shoppingBasketPageId INT = (SELECT ID FROM MESSAGE_AREA WHERE AREA='SHOPPING_BASKET_PAGE')
            DECLARE @orderConfirmationPageId INT = (SELECT ID FROM MESSAGE_AREA WHERE AREA='ORDER_CONFIRMATION_PAGE')
            DECLARE @allPageId INT = (SELECT ID FROM MESSAGE_AREA WHERE AREA='ALL')
			
			--Initialize data for MESSAGE_SUB_AREA
			TRUNCATE TABLE dbo.MESSAGE_SUB_AREA
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('LOGIN_PAGE_1',1,@loginPageId,'Sub area 1 of login page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE_1',1,@customerHomePageId,'Sub area 1 of customer home page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE_2',2,@customerHomePageId,'Sub area 2 of customer home page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE_3',3,@customerHomePageId,'Sub area 3 of customer home page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SHOPPING_BASKET_PAGE_1',1,@shoppingBasketPageId,'Sub area 1 of shopping basket page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('ORDER_CONFIRMATION_PAGE_1',1,@orderConfirmationPageId,'Sub area 1 of confimation page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SALES_HOME_PAGE_1',1,@saleHomePageId,'Sub area 1 of sales home page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SALES_HOME_PAGE_2',2,@saleHomePageId,'Sub area 2 of sales home page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SALES_HOME_PAGE_3',3,@saleHomePageId,'Sub area 3 of sales home page')
			INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('ALL',1,@allPageId,'For all sub areas except login')
			
			--Initialize data for MESSAGE_LOCATION_TYPE
			TRUNCATE TABLE dbo.MESSAGE_LOCATION_TYPE
			INSERT INTO MESSAGE_LOCATION_TYPE(LOCATION_TYPE,DESCRIPTION) VALUES('AFFILIATE','Affiliate scope - use affiliate shortname')
			INSERT INTO MESSAGE_LOCATION_TYPE(LOCATION_TYPE,DESCRIPTION) VALUES('CUSTOMER','Customer scope - use customer number')
			--Ignore for the moment because FILLIALE table not available in DB
			--INSERT INTO MESSAGE_LOCATION_TYPE(LOCATION_TYPE,DESCRIPTION) VALUES('FILLIALE','Filliale scope - use filliale number')
			
			--Initialize data for MESSAGE_VISIBILITY
			TRUNCATE TABLE dbo.MESSAGE_VISIBILITY
			INSERT INTO MESSAGE_VISIBILITY(VISIBILITY,DESCRIPTION) VALUES('ONCE','Message is shown only once')
			INSERT INTO MESSAGE_VISIBILITY(VISIBILITY,DESCRIPTION) VALUES('UNTIL_CLOSE','Show again after refresh app')
			INSERT INTO MESSAGE_VISIBILITY(VISIBILITY,DESCRIPTION) VALUES('UNTIL_CLOSE_AS_USER_SECTION','Show again after re-login')
			
			--Init data for MESSAGE_ACCESS_RIGHT_AREA
			TRUNCATE TABLE dbo.MESSAGE_ACCESS_RIGHT_AREA
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightSaleId, @saleHomePageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightSaleId, @shoppingBasketPageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightSaleId, @orderConfirmationPageId)
			
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerAdminId, @customerHomePageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerAdminId, @shoppingBasketPageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerAdminId, @orderConfirmationPageId)
			
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerNormalId, @customerHomePageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerNormalId, @shoppingBasketPageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerNormalId, @orderConfirmationPageId)
			
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerAllId, @customerHomePageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerAllId, @shoppingBasketPageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightCustomerAllId, @orderConfirmationPageId)
			
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightAllId, @loginPageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightAllId, @customerHomePageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightAllId, @saleHomePageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightAllId, @shoppingBasketPageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightAllId, @orderConfirmationPageId)
			INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(@messageAccessRightAllId, @allPageId)	
			
			DECLARE @customerRoleTypeId INT = (SELECT ID FROM MESSAGE_ROLE_TYPE WHERE ROLE_TYPE='CUSTOMER')
            DECLARE @saleRoleTypeId INT = (SELECT ID FROM MESSAGE_ROLE_TYPE WHERE ROLE_TYPE='SALES')
            DECLARE @allRoleTypeId INT = (SELECT ID FROM MESSAGE_ROLE_TYPE WHERE ROLE_TYPE='ALL')
            
			DECLARE @affilateLocationTypeId INT = (SELECT ID FROM MESSAGE_LOCATION_TYPE WHERE LOCATION_TYPE='AFFILIATE')
            DECLARE @customerLocationTypeId INT = (SELECT ID FROM MESSAGE_LOCATION_TYPE WHERE LOCATION_TYPE='CUSTOMER')

			--Initialize data for MESSAGE_LOCATION_TYPE_ROLE_TYPE
			TRUNCATE TABLE dbo.MESSAGE_LOCATION_TYPE_ROLE_TYPE
			INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(@affilateLocationTypeId, @customerRoleTypeId)
			INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(@affilateLocationTypeId, @saleRoleTypeId)
			INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(@affilateLocationTypeId, @allRoleTypeId)
			
			INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(@customerLocationTypeId, @customerRoleTypeId)
		</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_171_ADD_DROP_VEHICLE_HISTORY_COLUMNS_SB">
	    <sql>
	      ALTER TABLE dbo.VEHICLE_HISTORY DROP COLUMN VEH_VIN
	      ALTER TABLE dbo.USER_VEHICLE_HISTORY ADD SEARCH_TERM varchar(255) DEFAULT NULL
	      ALTER TABLE dbo.USER_VEHICLE_HISTORY ADD FROM_SOURCE varchar(50) DEFAULT 'C4C'
	      
	      UPDATE dbo.USER_VEHICLE_HISTORY SET FROM_SOURCE = 'C4C'
	      CREATE INDEX IDX_USER_VEH_HISTORY ON dbo.USER_VEHICLE_HISTORY(USER_ID, VEH_HISTORY_ID, SEARCH_TERM, FROM_SOURCE)
	      ALTER TABLE dbo.USER_VEHICLE_HISTORY DROP CONSTRAINT PK_USER_VEHICLE_HISTORY;
	    </sql>
  </changeSet>

</databaseChangeLog>
