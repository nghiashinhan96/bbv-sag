<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <changeSet author="CONNECT_APP" id="ITER_184_INIT_STAKIS_CZECH_COLLECTION_SETTING_AXCZ">
        <sql>
			DECLARE @czech_default_collection_id int = (SELECT ID FROM ORGANISATION_COLLECTION WHERE SHORTNAME = 'ax-cz')

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'logo_image')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'logo_image', 'https://s3.exellio.de/connect_media/collections/logo-der.png')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'default_logo')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'default_logo', '../images/logo/logo-der.png')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'background_image')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'background_image', '../images/background/bg-der.jpg')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'default_background')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'default_background', '../images/background/bg-der.jpg')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'description')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'description', 'Sag-CzechRepublic settings')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'theme_color_1')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'theme_color_1', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'theme_color_2')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'theme_color_2', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'font_color_1')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'font_color_1', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'font_color_2')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'font_color_2', 'black')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'back_to_top_arrow_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'back_to_top_arrow_color', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'footer_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'footer_color', '#c0d1e3')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'footer_text_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'footer_text_color', 'black')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'button_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'button_color', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'button_text_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'button_text_color', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'slide_show_paging_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'slide_show_paging_color', 'blue')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'slide_show_paging_color_inactive')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'slide_show_paging_color_inactive', 'blue')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'button_cart_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'button_cart_color', '#f6a60c')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'section_arrow_hover_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'section_arrow_hover_color', '#666666')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'availability_status_color_1')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'availability_status_color_1', '#f6a60c')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'availability_status_color_2')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'availability_status_color_2', '#20bc5d')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'availability_status_color_3')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'availability_status_color_3', 'red')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'information_icon_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'information_icon_color', '#787878')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'vin_notification_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'vin_notification_color', '#339900')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'carousel_background')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'carousel_background', '../images/carousel-arrows-derenginger.gif')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'ico_cart')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'ico_cart', '../images/ico-cart-derenginger.png')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'login_image')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'login_image', '../images/login-derenginger.jpg')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'pre_loader')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'pre_loader', '../images/logo/DS-Loader_small.gif')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'default_email')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'default_email', 'qui.luc@bbv.vn')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'google_analytics_tracking_code')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'google_analytics_tracking_code', 'UA-84230083-4')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'show_tyres_discount')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'show_tyres_discount', 'false')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'show_tyres_gross_price_header')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'show_tyres_gross_price_header', 'true')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'title')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'title', 'Stakis-store')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'default_vat_rate')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'default_vat_rate', '8.0')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'default_url')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'default_url', 'https://axcz10.bbv-demo.ch/ax-cz/')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'currency')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'currency', 'CZK')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'start_work_time')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'start_work_time', '5:00')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'end_work_time')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'end_work_time', '17:00')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'marketing_dept_email')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'marketing_dept_email', 'chau.le@bbv.vn')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'setting_locale')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'setting_locale', 'cz_CZ')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'is_customer_abs_enabled')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'is_customer_abs_enabled', 'false')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'is_sales_abs_enabled')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@czech_default_collection_id, 'is_sales_abs_enabled', 'true')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'customer_brand_priority_avail_filter')
				  BEGIN
				  INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'customer_brand_priority_avail_filter', '000')
				  END
			
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'c4s_brand_priority_avail_filter')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'c4s_brand_priority_avail_filter', '000')
				  END	
				    
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'detail_avail_text_de')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'detail_avail_text_de', 'Sollte der Artikel nicht innerhalb von 24 Std lieferbar sein, werden Sie informiert.')
				  END	  
			
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'detail_avail_text_fr')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'detail_avail_text_fr', 'Si l''article n''est pas disponible en 24 heures, vous en serez informé.')
				  END
			
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'detail_avail_text_it')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'detail_avail_text_it', 'Se l''articolo non è disponibile entro 24 ore, sarete informati.')
				  END
			
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'list_avail_text_de')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'list_avail_text_de', 'Nächster Arbeitstag, zweite Tour')
				  END
		 	
		 	IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'list_avail_text_fr')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'list_avail_text_fr', 'Prochain jour ouvrable, deuxième tournée')
				  END 
				  
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'list_avail_text_it')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'list_avail_text_it', 'Prossimo giorno lavorativo, secondo tour')
				  END   
				  
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'availability_icon')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'availability_icon', 'true')
				  END	  
			
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'drop_shipment_availability')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'drop_shipment_availability', 'false')
				  END
			
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'is_kso_enabled')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'is_kso_enabled', 'false')
				  END
			
			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'is_customer_brand_filter_enabled')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'is_customer_brand_filter_enabled', 'true')
				  END
		 	
		 	IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @czech_default_collection_id AND SETTING_KEY = 'is_sales_brand_filter_enabled')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@czech_default_collection_id, 'is_sales_brand_filter_enabled', 'false')
				  END
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_184_INIT_RELATION_DATA_FOR_ADMIN_BACK_OFFICE_AXCZ">
        <sql>
        	-- ESHOP_GROUP for system admin
        	IF NOT EXISTS(SELECT 1 FROM dbo.ESHOP_GROUP where NAME='SYSTEM_ADMIN')
				  BEGIN
				  
					INSERT INTO  dbo.ESHOP_GROUP (NAME, DESCRIPTION)
					VALUES	('SYSTEM_ADMIN', 'SAG System admin group')
					DECLARE @group_id int = (select @@IDENTITY)
		
					-- GROUP_ROLE for system admin group
					DECLARE @system_admin_group_id int = (SELECT ID FROM ESHOP_GROUP WHERE NAME = 'SYSTEM_ADMIN')
					DECLARE @system_admin_role_id int = (SELECT ID FROM ESHOP_ROLE WHERE NAME = 'SYSTEM_ADMIN')
					
					INSERT INTO GROUP_ROLE(GROUP_ID, ROLE_ID)
					VALUES(@system_admin_group_id, @system_admin_role_id)
		
					-- Organisation_Group for system admin
					DECLARE @sag_organisation_id int = (SELECT ID FROM ORGANISATION WHERE SHORTNAME = 'sag')
					
					INSERT INTO Organisation_Group(ORGANISATION_ID, GROUP_ID)
					VALUES(@sag_organisation_id, @group_id)
					
				 END
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_184_INIT_RELATION_DATA_FOR_SALES_AXCZ">
        <sql>
        -- ESHOP_GROUP for system sales
       		 IF NOT EXISTS(SELECT 1 FROM dbo.ESHOP_GROUP where NAME='SALES_ASSISTANT')
				  BEGIN
				  	INSERT INTO dbo.ESHOP_GROUP (NAME, DESCRIPTION)
					VALUES	('SALES_ASSISTANT', 'Sales assistant group')
					
					-- GROUP_ROLE for system sales group
					DECLARE @system_sales_group_id int = (SELECT ID FROM ESHOP_GROUP WHERE NAME = 'SALES_ASSISTANT')
					DECLARE @system_sales_role_id int = (SELECT ID FROM ESHOP_ROLE WHERE NAME = 'SALES_ASSISTANT')
					INSERT INTO GROUP_ROLE(GROUP_ID, ROLE_ID)
					VALUES(@system_sales_group_id, @system_sales_role_id)
		
					-- Organisation_Group for sales
					DECLARE @sag_organisation_id int = (SELECT ID FROM ORGANISATION WHERE SHORTNAME = 'sag')
					DECLARE @sales_group_id int = (select ID FROM ESHOP_GROUP WHERE NAME ='SALES_ASSISTANT' )
					INSERT INTO Organisation_Group(ORGANISATION_ID, GROUP_ID)
					VALUES(@sag_organisation_id, @sales_group_id)
				  END
        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP" id="ITER_184_INIT_DEFAULT_ORG_COLLECTION_SETTINGS_AXCZ">
        <sql>
			DECLARE @sagId int = (SELECT ID FROM dbo.ORGANISATION_COLLECTION WHERE SHORTNAME='sag')
			
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'logo_image', 'https://s3.exellio.de/connect_media/collections/logo-tech.png')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'default_logo', '../images/logo/logo-tech.png')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'background_image', '../images/background/bg-tech.jpg')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'default_background', '../images/background/bg-tech.jpg')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'description', 'Default-Settings')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'theme_color_1', '#e3000b')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'theme_color_2', '#e3000b')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'font_color_1', 'black')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'font_color_2', 'white')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'back_to_top_arrow_color', '#e3000b')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'footer_color', 'black')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'footer_text_color', 'white')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'button_color', '#e3000b')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'button_text_color', 'black')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'slide_show_paging_color', 'blue')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'slide_show_paging_color_inactive', 'blue')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'button_cart_color', '#f6a60c')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'section_arrow_hover_color', 'darkgray')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'availability_status_color_1', '#f6a60c')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'availability_status_color_2', '#20bc5d')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'availability_status_color_3', 'red')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'information_icon_color', '#787878')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'vin_notification_color', '#339900')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'carousel_background', '../images/carousel-arrows-technomag.gif')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'ico_cart', '../images/ico-cart-technomag.png')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'login_image', '../images/login-technomag.jpg')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'pre_loader', '../images/logo/TS-Loader_small.gif')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'default_email', 'noReply@sag-ag.ch')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'google_analytics_tracking_code', 'UA-84230083-3')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'show_tyres_discount', 'false')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'show_tyres_gross_price_header', 'true')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'title', 'SAG1')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'title', 'SAG')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'send_feedback_notification_email', 'true')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'setting_locale', 'cz_CZ')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'eh_default_email', 'noReply@sag-ag.ch')
			INSERT INTO dbo.ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE) VALUES(@sagId, 'sso_case_one', 'true');
        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP" id="ITER_184_UPDATE_COUNTRY_SHORT_CODE_AXCZ">
        <sql>
            UPDATE dbo.COUNTRY SET SHORT_CODE = 'cz' WHERE CODE = 'CZE'
        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP" id="ITER_184_UPDATE_LANGUAGE_LANGISO_CS_AXCZ">
        <sql>
            UPDATE dbo.LANGUAGES SET LANGCODE = 'LANG_CS', LANGISO = 'CS', DESCRIPTION = 'Czech Republic' WHERE LANGCODE = 'LANG_CZ'
        </sql>
    </changeSet>
    
  <changeSet author="CONNECT_APP" id="ITER_184_TABLE_SUPPORTED_AFFILIATE_ADD_NO_REPLY_EMAIL_AXCZ">
    <sql>
     	UPDATE dbo.SUPPORTED_AFFILIATE SET NO_REPLY_EMAIL = 'noReply@sag-ag.ch' WHERE SHORT_NAME = 'ax-cz';
	</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_184_ADD_DEFAULT_PRICE_DISPLAY_SETTING_AXCZ">
    <sql>
		DECLARE @price_display_id INT
		INSERT INTO dbo.PRICE_DISPLAY_TYPE ([TYPE], DESC_CODE, DESCRIPTION) VALUES('UVPE_OEP_GROSS', 'UVPE_OEP_GROSS', 'UVPE -> OEP -> Gross')
		SET @price_display_id = SCOPE_IDENTITY()
		UPDATE dbo.CUSTOMER_SETTINGS SET PRICE_DISPLAY_ID = @price_display_id;
	</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_184_MASTER_DATA_FOR_MESSAGE_AXCZ">
    <sql>
        --Initialize data for MESSAGE
		--Initialize data for MESSAGE_ACCESS_RIGHT
		--DELETE FROM MESSAGE_ACCESS_RIGHT
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_ACCESS_RIGHT', RESEED, 0)
		INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('SALES','SALES',2,'Just for sales user')
		INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('CUSTOMER_ADMIN','ADMIN',1,'Just for customer admin')
		INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('CUSTOMER_NORMAL','NORMAL_USER',1,'Just for customer normal user')
		INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('CUSTOMER_ALL','ALL',1,'Just for customer admin and customer normal user')
		INSERT INTO MESSAGE_ACCESS_RIGHT(USER_GROUP,USER_GROUP_KEY,MESSAGE_ROLE_TYPE_ID,DESCRIPTION) VALUES('ALL','ALL',3,'For all users')
		
		--Initialize data for MESSAGE_ROLE_TYPE
		--DELETE FROM MESSAGE_ROLE_TYPE
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_ROLE_TYPE', RESEED, 0)		
		INSERT INTO MESSAGE_ROLE_TYPE(ROLE_TYPE) VALUES('CUSTOMER')
		INSERT INTO MESSAGE_ROLE_TYPE(ROLE_TYPE) VALUES('SALES')
		INSERT INTO MESSAGE_ROLE_TYPE(ROLE_TYPE) VALUES('ALL')
		
		--Initialize data for MESSAGE_ACCESS_RIGHT_ROLE
		--DELETE FROM MESSAGE_ACCESS_RIGHT_ROLE
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_ACCESS_RIGHT_ROLE', RESEED, 0)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(1,4)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(2,3)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(3,6)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(4,3)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(4,6)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(5,3)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(5,4)
		INSERT INTO MESSAGE_ACCESS_RIGHT_ROLE(MESSAGE_ACCESS_RIGHT_ID,ESHOP_ROLE_ID) VALUES(5,6)
		
		--Initialize data for MESSAGE_STYLE
		--DELETE FROM MESSAGE_STYLE
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_STYLE', RESEED, 0)
		INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('DEFAULT','Default type')
		INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('PRIMARY','Primary type')
		INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('SUCCESS','Success type')
		INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('WARNING','Warning type')
		INSERT INTO MESSAGE_STYLE(STYLE,DESCRIPTION) VALUES('DANGER','Alert type')
		
		--Initialize data for MESSAGE_TYPE
		--DELETE FROM MESSAGE_TYPE
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_TYPE', RESEED, 0)
		INSERT INTO MESSAGE_TYPE(TYPE,DESCRIPTION) VALUES('PANEL','Defined per shop')
		INSERT INTO MESSAGE_TYPE(TYPE,DESCRIPTION) VALUES('BANNER','Shown at the very top of the page on all pages except login')
		
		--Initialize data for MESSAGE_AREA
		--DELETE FROM MESSAGE_AREA
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_AREA', RESEED, 0)
		INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('LOGIN_PAGE',0,'For login page only')
		INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE',1,'For customer home page only')
		INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('SALES_HOME_PAGE',1,'For sales-home page only')
		INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('SHOPPING_BASKET_PAGE',1,'For shopping basket page only')
		INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('ORDER_CONFIRMATION_PAGE',1,'For order confirmation page only')
		INSERT INTO MESSAGE_AREA(AREA,AUTH,DESCRIPTION) VALUES('ALL',1,'For all interal pages except login')
		
		--Initialize data for MESSAGE_SUB_AREA
		--DELETE FROM MESSAGE_SUB_AREA
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_SUB_AREA', RESEED, 0)
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('LOGIN_PAGE_1',1,1,'Sub area 1 of login page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE_1',1,2,'Sub area 1 of customer home page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE_2',2,2,'Sub area 2 of customer home page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('CUSTOMER_HOME_PAGE_3',3,2,'Sub area 3 of customer home page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SHOPPING_BASKET_PAGE_1',1,4,'Sub area 1 of shopping basket page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('ORDER_CONFIRMATION_PAGE_1',1,5,'Sub area 1 of confimation page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SALES_HOME_PAGE_1',1,3,'Sub area 1 of sales home page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SALES_HOME_PAGE_2',2,3,'Sub area 2 of sales home page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('SALES_HOME_PAGE_3',3,3,'Sub area 3 of sales home page')
		INSERT INTO MESSAGE_SUB_AREA(SUB_AREA,SORT,MESSAGE_AREA_ID,DESCRIPTION) VALUES('ALL',1,6,'For all sub areas except login')
		
		--Initialize data for MESSAGE_LOCATION_TYPE
		--DELETE FROM MESSAGE_LOCATION_TYPE
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_LOCATION_TYPE', RESEED, 0)
		INSERT INTO MESSAGE_LOCATION_TYPE(LOCATION_TYPE,DESCRIPTION) VALUES('AFFILIATE','Affiliate scope - use affiliate shortname')
		INSERT INTO MESSAGE_LOCATION_TYPE(LOCATION_TYPE,DESCRIPTION) VALUES('CUSTOMER','Customer scope - use customer number')
		--Ignore for the moment because FILLIALE table not available in DB
		--INSERT INTO MESSAGE_LOCATION_TYPE(LOCATION_TYPE,DESCRIPTION) VALUES('FILLIALE','Filliale scope - use filliale number')
		
		--Initialize data for MESSAGE_VISIBILITY
		--DELETE FROM MESSAGE_VISIBILITY
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_VISIBILITY', RESEED, 0)		
		INSERT INTO MESSAGE_VISIBILITY(VISIBILITY,DESCRIPTION) VALUES('ONCE','Message is shown only once')
		INSERT INTO MESSAGE_VISIBILITY(VISIBILITY,DESCRIPTION) VALUES('UNTIL_CLOSE','Show again after refresh app')
		INSERT INTO MESSAGE_VISIBILITY(VISIBILITY,DESCRIPTION) VALUES('UNTIL_CLOSE_AS_USER_SECTION','Show again after re-login')
		
		--Init data for MESSAGE_ACCESS_RIGHT_AREA
		--DELETE FROM MESSAGE_ACCESS_RIGHT_AREA
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_ACCESS_RIGHT_AREA', RESEED, 0)		
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(1,3)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(1,4)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(1,5)
		
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(2,2)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(2,4)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(2,5)
		
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(3,2)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(3,4)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(3,5)
		
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(4,2)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(4,4)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(4,5)
		
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(5,1)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(5,2)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(5,3)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(5,4)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(5,5)
		INSERT INTO MESSAGE_ACCESS_RIGHT_AREA(MESSAGE_ACCESS_RIGHT_ID,MESSAGE_AREA_ID) VALUES(5,6)
		
		--Initialize data for MESSAGE_LOCATION_TYPE_ROLE_TYPE
		--DELETE FROM MESSAGE_LOCATION_TYPE_ROLE_TYPE
     	--Reseed
      	--DBCC CHECKIDENT ('MESSAGE_LOCATION_TYPE_ROLE_TYPE', RESEED, 0)		
		INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(1,1)
		INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(1,2)
		INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(1,3)
		
		INSERT INTO MESSAGE_LOCATION_TYPE_ROLE_TYPE(MESSAGE_LOCATION_TYPE_ID,MESSAGE_ROLE_TYPE_ID) VALUES(2,1)
	</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_184_ADDRESS_TYPE_AXCZ">
    <sql>
        --Initialize data for ADDRESS_TYPE
		INSERT INTO ADDRESS_TYPE ([TYPE], DESCRIPTION) VALUES('DEFAULT', 'DEFAULT')
		INSERT INTO ADDRESS_TYPE ([TYPE], DESCRIPTION) VALUES('OFFICE', 'Office')
		INSERT INTO ADDRESS_TYPE ([TYPE], DESCRIPTION) VALUES('BRANCH', 'Branch')
		INSERT INTO ADDRESS_TYPE ([TYPE], DESCRIPTION) VALUES('SHOWROOM', 'Showroom')
		INSERT INTO ADDRESS_TYPE ([TYPE], DESCRIPTION) VALUES('GARAGE', 'Garage')
		INSERT INTO ADDRESS_TYPE ([TYPE], DESCRIPTION) VALUES('DELIVERY', 'Delivery')
		INSERT INTO ADDRESS_TYPE ([TYPE], DESCRIPTION) VALUES('INVOICE', 'INVOICE');
		
	</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_184_REMOVE_PARTIAL_COLLECTIVE_DELIVERY_AXCZ">
    <sql>
      UPDATE dbo.USER_SETTINGS SET COLLECTIVE_DELIVERY_ID= ( select cd.ID from dbo.COLLECTIVE_DELIVERY cd WHERE cd.DESC_CODE ='COLLECTIVE_DELIVERY2');
      UPDATE dbo.CUSTOMER_SETTINGS SET COLLECTIVE_DELIVERY_ID= ( select cd.ID from dbo.COLLECTIVE_DELIVERY cd WHERE cd.DESC_CODE ='COLLECTIVE_DELIVERY2');
      DELETE FROM dbo.COLLECTIVE_DELIVERY WHERE DESC_CODE ='COLLECTIVE_DELIVERY1';
    </sql>
  </changeSet>

  <changeSet author="CONNECT_APP" id="ITER_184_TABLE_FEEDBACK_STATUS_ADD_DATA_AXCZ">
    <sql>
      -- DELETE FROM FEEDBACK_STATUS
      -- Reseed
      -- DBCC CHECKIDENT ('FEEDBACK_STATUS', RESEED, 0)
      INSERT INTO FEEDBACK_STATUS(STATUS_CODE,	DESCRIPTION) VALUES ('NOT_STARTED', 'Not Started')
      INSERT INTO FEEDBACK_STATUS(STATUS_CODE,	DESCRIPTION) VALUES ('ASSIGNED', 'Assigned')
      INSERT INTO FEEDBACK_STATUS(STATUS_CODE,	DESCRIPTION) VALUES ('IN_PROGRESS', 'In Progress')
      INSERT INTO FEEDBACK_STATUS(STATUS_CODE,	DESCRIPTION) VALUES ('CROSS_CHECKING', 'Cross Checking')
      INSERT INTO FEEDBACK_STATUS(STATUS_CODE,	DESCRIPTION) VALUES ('DONE', 'Done')
	</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_184_TABLE_FEEDBACK_TOPIC_ADD_DATA_AXCZ">
    <sql>
		DELETE FROM dbo.FEEDBACK
		DELETE FROM dbo.FEEDBACK_TOPIC
		DELETE FROM dbo.FEEDBACK_DEPARTMENT_CONTACT
		DELETE FROM dbo.FEEDBACK_DEPARTMENT
		DELETE FROM dbo.FEEDBACK_TOPIC_DEPARTMENT
	
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PRICING', 'Pricing', 1)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('ORDERS_AVAILABILITY', 'Orders, Availability', 2)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('EASE_OF_USE', 'Ease of use', 3)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('MISSING_WRONG_DATA', 'Missing/wrong data (vehicle, part, range of goods etc.)', 4)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('LICENSING', 'Licensing (HaynesPro, VIN etc.)', 5)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('SYSTEM_BROWSER_INTERFACES', 'System, Browser, Interfaces', 6)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PROFILE_SETTINGS', 'Profile, Settings', 7)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('OTHER', 'Other...', 8)
		
		INSERT INTO dbo.FEEDBACK_DEPARTMENT (DEPARTMENT_CODE , DESCRIPTION) VALUES('DATA_MANAGEMENT', 'Category Management AT')
		INSERT INTO dbo.FEEDBACK_DEPARTMENT (DEPARTMENT_CODE , DESCRIPTION) VALUES('CONNECT_SERVICE_DESK', 'Data Connect Team')
		
		DECLARE @dataManagementDept INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='DATA_MANAGEMENT')
		DECLARE @connectServiceDeskDept INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='CONNECT_SERVICE_DESK')
		
		DECLARE @topicPricing INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PRICING')
		DECLARE @topicOrderAvai INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='ORDERS_AVAILABILITY')
		DECLARE @topicEaseOfUse INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='EASE_OF_USE')
		DECLARE @topicDataIssue INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='MISSING_WRONG_DATA')
		DECLARE @topicLicense INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='LICENSING')
		DECLARE @topicSystemBrowserInterface INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='SYSTEM_BROWSER_INTERFACES')
		DECLARE @topicProfileSetting INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PROFILE_SETTINGS')
		DECLARE @topicOther INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='OTHER')
		
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicPricing, @dataManagementDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicOrderAvai, @dataManagementDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicDataIssue, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicEaseOfUse, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicLicense, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicSystemBrowserInterface, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicProfileSetting, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicOther, @connectServiceDeskDept)

		--Replace this with "EmailFrom for PROD" if running in PROD env
		INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@dataManagementDept, 'EMAIL', 'chau.le@bbv.vn')
		INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@connectServiceDeskDept, 'EMAIL', 'chau.le@bbv.vn');
		
		--EmailFrom for PROD
		--INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@dataManagementDept, 'EMAIL', 'pm@stahlgruber.cz')
		--INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@connectServiceDeskDept, 'EMAIL', 'connect@sag.cz');
	</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_184_INSERT_VIN_HAYNESPRO_PERMISSION_FOR_AXCZ">
        <sql>
           DECLARE @permissionTemp TABLE(collection_id int, eshop_permision_id int)
           INSERT INTO @permissionTemp
	           SELECT orgCol.ID, p.ID FROM ESHOP_PERMISSION p, ORGANISATION_COLLECTION orgCol
	           JOIN ORGANISATION org on orgCol.AFFILIATE_ID= org.ID
	           JOIN ORGANISATION_TYPE orgType on org.ORGTYPE_ID = orgType.ID
	           WHERE orgType.LEVEL = 2 AND org.SHORTNAME='ax-cz' 
	           	AND p.PERMISSION = 'VIN'
	       INSERT INTO @permissionTemp
	           SELECT orgCol.ID, p.ID FROM ESHOP_PERMISSION p, ORGANISATION_COLLECTION orgCol
	           JOIN ORGANISATION org on orgCol.AFFILIATE_ID= org.ID
	           JOIN ORGANISATION_TYPE orgType on org.ORGTYPE_ID = orgType.ID
	           WHERE orgType.LEVEL = 2 AND org.SHORTNAME='ax-cz' 
	           	AND p.PERMISSION = 'HAYNESPRO'
	       IF EXISTS(SELECT * FROM @permissionTemp)
	        	INSERT INTO dbo.COLLECTION_PERMISSION (COLLECTION_ID, ESHOP_PERMISSION_ID)
	       		 	SELECT collection_id, eshop_permision_id FROM @permissionTemp WHERE
	       		  	eshop_permision_id NOT IN(SELECT ESHOP_PERMISSION_ID FROM COLLECTION_PERMISSION WHERE COLLECTION_ID=collection_id)
        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP" id="ITER_185_INIT_WORKING_DAY_AXCZ">
        <sql>
            INSERT INTO WORKING_DAY (CODE, DESCRIPTION) VALUES( 'WORKING_DAY', NULL);
			INSERT INTO WORKING_DAY (CODE, DESCRIPTION) VALUES( 'NON_WORKING_DAY', NULL);
			INSERT INTO WORKING_DAY (CODE, DESCRIPTION) VALUES( 'PUBLIC_HOLIDAY', NULL);
        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP"	id="ITER_184_INIT_WSS_WORKING_DAY_DATA_AXCZ">
		<sql>
			INSERT INTO WSS_WORKING_DAY (CODE, DESCRIPTION) VALUES('WORKING_DAY', NULL)
			INSERT INTO WSS_WORKING_DAY (CODE, DESCRIPTION) VALUES('NON_WORKING_DAY', NULL)
			INSERT INTO WSS_WORKING_DAY (CODE, DESCRIPTION) VALUES('PUBLIC_HOLIDAY', NULL)
		</sql>
	</changeSet>
	
	<changeSet author="CONNECT_APP" id="ITER_175_INSERT_WSS_MAX_AVAIL_DAY_RANGE_SETTING_INTO_ESHOP_GLOBAL_SETTING">
	    <sql>
	     	INSERT INTO ESHOP_GLOBAL_SETTING (CODE, DESCRIPTION, ENABLED, SETTING_TYPE, SETTING_VALUE) VALUES('wss_max_availability_day_range', '', 1, 'WSS', 30);
	    </sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_184_TABLE_LICENSE_SETTING_SET_PRODUCT_TEXT_VIN20_AXCZ">
	    <sql>
	      UPDATE dbo.LICENSE_SETTINGS SET PRODUCT_TEXT = 'Premium VIN vyhledávání 20x' where PACK_NAME = 'VIN-20'
	    </sql>
  </changeSet>

</databaseChangeLog>
