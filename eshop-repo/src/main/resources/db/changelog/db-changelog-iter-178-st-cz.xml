<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

<changeSet author="CONNECT_APP" id="ITER_178_TABLE_FEEDBACK_TOPIC_ADD_DATA_CZ">
    <sql>
		DELETE FROM dbo.FEEDBACK
		DELETE FROM dbo.FEEDBACK_TOPIC
		DELETE FROM dbo.FEEDBACK_DEPARTMENT_CONTACT
		DELETE FROM dbo.FEEDBACK_DEPARTMENT
		DELETE FROM dbo.FEEDBACK_TOPIC_DEPARTMENT
	
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PRICING', 'Pricing', 1)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('ORDERS_AVAILABILITY', 'Orders, Availability', 2)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('EASE_OF_USE', 'Ease of use', 3)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('MISSING_WRONG_DATA', 'Missing/wrong data (vehicle, part, range of goods etc.)', 4)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('LICENSING', 'Licensing (HaynesPro, VIN etc.)', 5)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('SYSTEM_BROWSER_INTERFACES', 'System, Browser, Interfaces', 6)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('PROFILE_SETTINGS', 'Profile, Settings', 7)
		INSERT INTO dbo.FEEDBACK_TOPIC (TOPIC_CODE, DESCRIPTION, SORT) VALUES('OTHER', 'Other...', 8)
		
		INSERT INTO dbo.FEEDBACK_DEPARTMENT (DEPARTMENT_CODE , DESCRIPTION) VALUES('DATA_MANAGEMENT', 'Category Management AT')
		INSERT INTO dbo.FEEDBACK_DEPARTMENT (DEPARTMENT_CODE , DESCRIPTION) VALUES('CONNECT_SERVICE_DESK', 'Data Connect Team')
		
		DECLARE @dataManagementDept INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='DATA_MANAGEMENT')
		DECLARE @connectServiceDeskDept INT = (SELECT ID FROM FEEDBACK_DEPARTMENT WHERE DEPARTMENT_CODE='CONNECT_SERVICE_DESK')
		
		DECLARE @topicPricing INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PRICING')
		DECLARE @topicOrderAvai INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='ORDERS_AVAILABILITY')
		DECLARE @topicEaseOfUse INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='EASE_OF_USE')
		DECLARE @topicDataIssue INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='MISSING_WRONG_DATA')
		DECLARE @topicLicense INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='LICENSING')
		DECLARE @topicSystemBrowserInterface INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='SYSTEM_BROWSER_INTERFACES')
		DECLARE @topicProfileSetting INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='PROFILE_SETTINGS')
		DECLARE @topicOther INT = (SELECT ID FROM FEEDBACK_TOPIC WHERE TOPIC_CODE='OTHER')
		
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicPricing, @dataManagementDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicOrderAvai, @dataManagementDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicDataIssue, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicEaseOfUse, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicLicense, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicSystemBrowserInterface, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicProfileSetting, @connectServiceDeskDept)
		INSERT INTO dbo.FEEDBACK_TOPIC_DEPARTMENT (TOPIC_ID, DEPARTMENT_ID) VALUES(@topicOther, @connectServiceDeskDept)

		--Replace this with "EmailFrom for PROD" if running in PROD env
		INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@dataManagementDept, 'EMAIL', 'chau.le@bbv.vn')
		INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@connectServiceDeskDept, 'EMAIL', 'chau.le@bbv.vn');
		
		--EmailFrom for PROD
		--INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@dataManagementDept, 'EMAIL', 'pm@stahlgruber.cz')
		--INSERT INTO dbo.FEEDBACK_DEPARTMENT_CONTACT (DEPARTMENT_ID, [TYPE], VALUE) VALUES(@connectServiceDeskDept, 'EMAIL', 'connect@sag.cz');
	</sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_178_INSERT_VIN_HAYNESPRO_PERMISSION_FOR_CZ">
        <sql>
           DECLARE @permissionTemp TABLE(collection_id int, eshop_permision_id int)
           INSERT INTO @permissionTemp
	           SELECT orgCol.ID, p.ID FROM ESHOP_PERMISSION p, ORGANISATION_COLLECTION orgCol
	           JOIN ORGANISATION org on orgCol.AFFILIATE_ID= org.ID
	           JOIN ORGANISATION_TYPE orgType on org.ORGTYPE_ID = orgType.ID
	           WHERE orgType.LEVEL = 2 AND org.SHORTNAME='st-cz' 
	           	AND p.PERMISSION = 'VIN'
	       INSERT INTO @permissionTemp
	           SELECT orgCol.ID, p.ID FROM ESHOP_PERMISSION p, ORGANISATION_COLLECTION orgCol
	           JOIN ORGANISATION org on orgCol.AFFILIATE_ID= org.ID
	           JOIN ORGANISATION_TYPE orgType on org.ORGTYPE_ID = orgType.ID
	           WHERE orgType.LEVEL = 2 AND org.SHORTNAME='st-cz' 
	           	AND p.PERMISSION = 'HAYNESPRO'
	       IF EXISTS(SELECT * FROM @permissionTemp)
	        	INSERT INTO dbo.COLLECTION_PERMISSION (COLLECTION_ID, ESHOP_PERMISSION_ID)
	       		 	SELECT collection_id, eshop_permision_id FROM @permissionTemp WHERE
	       		  	eshop_permision_id NOT IN(SELECT ESHOP_PERMISSION_ID FROM COLLECTION_PERMISSION WHERE COLLECTION_ID=collection_id)
        </sql>
    </changeSet>

</databaseChangeLog>