<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

  <changeSet author="CONNECT_APP" id="ITER_182_N_VAR_CHAR_DROP_VIEWS">
    <sql>
        DROP VIEW IF EXISTS V_USER_DETAIL 
        DROP VIEW IF EXISTS V_USER_VEHICLE_HISTORY 
        DROP VIEW IF EXISTS V_COLLECTION_SEARCH
        DROP VIEW IF EXISTS V_FINAL_CUSTOMER
    </sql>
  </changeSet>

  <changeSet author="CONNECT_APP" id="ITER_182_N_VAR_CHAR_UPDATE_TYPE">
    <sql>      
        ALTER TABLE ORGANISATION ALTER COLUMN NAME [nvarchar](150) NULL
        ALTER TABLE ORGANISATION ALTER COLUMN DESCRIPTION [nvarchar](255) NULL

        ALTER TABLE ESHOP_USER ALTER COLUMN FIRST_NAME [nvarchar](255) NULL
        ALTER TABLE ESHOP_USER ALTER COLUMN LAST_NAME [nvarchar](255) NULL
        ALTER TABLE ESHOP_USER ALTER COLUMN USERNAME [nvarchar](255) NULL

        ALTER TABLE BASKET_HISTORY ALTER COLUMN BASKET_NAME [nvarchar](255) NULL
        ALTER TABLE BASKET_HISTORY ALTER COLUMN BASKET_JSON [nvarchar](MAX) NULL
        ALTER TABLE BASKET_HISTORY ALTER COLUMN CUSTOMER_REF_TEXT [nvarchar](MAX) NULL

        ALTER TABLE ORGANISATION_COLLECTION ALTER COLUMN NAME [nvarchar](150) NULL

        -- DROP INDEX USER_VEHICLE_HISTORY.IDX_USER_VEH_HISTORY;
        -- ALTER TABLE USER_VEHICLE_HISTORY ADD CONSTRAINT DF_FROM_SOURCE DEFAULT N'C4C' FOR FROM_SOURCE;
        -- CREATE INDEX IDX_USER_VEH_HISTORY ON dbo.USER_VEHICLE_HISTORY(USER_ID, VEH_HISTORY_ID, SEARCH_TERM, FROM_SOURCE)
        ALTER TABLE USER_VEHICLE_HISTORY ALTER COLUMN SEARCH_TERM [nvarchar](255) NULL

        ALTER TABLE ORDER_HISTORY ALTER COLUMN ORDER_INFO_JSON [nvarchar](MAX) NULL
        ALTER TABLE ORDER_HISTORY ALTER COLUMN SALE_NAME [nvarchar](150) NULL

        ALTER TABLE FEEDBACK ALTER COLUMN USER_INFORMATION [nvarchar](MAX) NULL
        ALTER TABLE FEEDBACK ALTER COLUMN TECHNICAL_INFORMATION [nvarchar](MAX) NULL
        ALTER TABLE FEEDBACK ALTER COLUMN FEEDBACK_MESSAGE [nvarchar](3000) NULL
        ALTER TABLE FEEDBACK ALTER COLUMN SALES_INFORMATION [nvarchar](MAX) NULL

        ALTER TABLE FINAL_CUSTOMER_ORDER ALTER COLUMN REFERENCE [nvarchar](255) NULL
        ALTER TABLE FINAL_CUSTOMER_ORDER ALTER COLUMN BRANCH_REMARK [nvarchar](255) NULL

        ALTER TABLE FINAL_CUSTOMER_PROPERTY ALTER COLUMN [VALUE] [nvarchar](255) NULL

        ALTER TABLE FEEDBACK_TOPIC ALTER COLUMN DESCRIPTION [nvarchar](500) NULL

        ALTER TABLE FINAL_CUSTOMER_ORDER_ITEM ALTER COLUMN VEHICLE_DESC [nvarchar](255) NULL
        ALTER TABLE FINAL_CUSTOMER_ORDER_ITEM ALTER COLUMN ARTICLE_DESC [nvarchar](255) NULL
        ALTER TABLE FINAL_CUSTOMER_ORDER_ITEM ALTER COLUMN GEN_ART_DESCRIPTION [nvarchar](255) NULL
        ALTER TABLE FINAL_CUSTOMER_ORDER_ITEM ALTER COLUMN SUPPLIER [nvarchar](255) NULL
        ALTER TABLE FINAL_CUSTOMER_ORDER_ITEM ALTER COLUMN PRODUCT_ADDON [nvarchar](255) NULL
        ALTER TABLE FINAL_CUSTOMER_ORDER_ITEM ALTER COLUMN REFERENCE [nvarchar](255) NULL

        ALTER TABLE MESSAGE ALTER COLUMN TITLE [nvarchar](200) NULL

        ALTER TABLE ADDRESS ALTER COLUMN LINE1 [nvarchar](150) NULL
        ALTER TABLE ADDRESS ALTER COLUMN LINE2 [nvarchar](50) NULL
        ALTER TABLE ADDRESS ALTER COLUMN LINE3 [nvarchar](50) NULL
        ALTER TABLE ADDRESS ALTER COLUMN CITY [nvarchar](50) NULL
        ALTER TABLE ADDRESS ALTER COLUMN [STATE] [nvarchar](50) NULL

        ALTER TABLE OFFER ALTER COLUMN OFFER_NUMBER [nvarchar](10) NULL
        ALTER TABLE OFFER ALTER COLUMN REMARK [nvarchar](MAX) NULL
        ALTER TABLE OFFER ALTER COLUMN DELIVERY_LOCATION [nvarchar](50) NULL

        ALTER TABLE OFFER_PERSON ALTER COLUMN FIRST_NAME [nvarchar](100) NULL
        ALTER TABLE OFFER_PERSON ALTER COLUMN LAST_NAME [nvarchar](100) NULL
        ALTER TABLE OFFER_PERSON ALTER COLUMN OFFER_COMPANY_NAME [nvarchar](100) NULL

        ALTER TABLE OFFER_POSITION ALTER COLUMN ARTICLE_NUMBER [nvarchar](50) NULL
        ALTER TABLE OFFER_POSITION ALTER COLUMN ARTICLE_DESCRIPTION [nvarchar](500) NULL
        ALTER TABLE OFFER_POSITION ALTER COLUMN VEHICLE_DESCRIPTION [nvarchar](500) NULL
        ALTER TABLE OFFER_POSITION ALTER COLUMN REMARK [nvarchar](500) NULL
        ALTER TABLE OFFER_POSITION ALTER COLUMN VEHICLE_BOM_DESCRIPTION [nvarchar](500) NULL
        ALTER TABLE OFFER_POSITION ALTER COLUMN ARTICLE_ENHANCED_DESCRIPTION [nvarchar](500) NULL
        ALTER TABLE OFFER_POSITION ALTER COLUMN AW_NUMBER [nvarchar](40) NULL
        ALTER TABLE OFFER_POSITION ALTER COLUMN DISPLAYED_PRICE_BRAND [nvarchar](50) NULL

        ALTER TABLE OFFER_ADDRESS ALTER COLUMN LINE1 [nvarchar](150) NULL
        ALTER TABLE OFFER_ADDRESS ALTER COLUMN LINE2 [nvarchar](50) NULL
        ALTER TABLE OFFER_ADDRESS ALTER COLUMN LINE3 [nvarchar](50) NULL
        ALTER TABLE OFFER_ADDRESS ALTER COLUMN CITY [nvarchar](50) NULL
        ALTER TABLE OFFER_ADDRESS ALTER COLUMN [STATE] [nvarchar](50) NULL

        ALTER TABLE OFFER_PERSON_PROPERTY ALTER COLUMN [VALUE] [nvarchar](MAX) NULL

        ALTER TABLE BRANCH ALTER COLUMN ADDRESS_STREET [nvarchar](255) NULL
        ALTER TABLE BRANCH ALTER COLUMN ADDRESS_CITY [nvarchar](255) NULL
        ALTER TABLE BRANCH ALTER COLUMN ADDRESS_DESC [nvarchar](255) NULL
        ALTER TABLE BRANCH ALTER COLUMN ADDRESS_COUNTRY [nvarchar](255) NULL

        ALTER TABLE AAD_ACCOUNTS ALTER COLUMN FIRST_NAME [nvarchar](255) NULL
        ALTER TABLE AAD_ACCOUNTS ALTER COLUMN LAST_NAME [nvarchar](255) NULL

        ALTER TABLE CURRENCY ALTER COLUMN DESCRIPTION [nvarchar](50) NULL

        ALTER TABLE ESHOP_CART_ITEM ALTER COLUMN ARTICLE_JSON [nvarchar](MAX) NULL
        ALTER TABLE ESHOP_CART_ITEM ALTER COLUMN CATEGORY_JSON [nvarchar](MAX) NULL
        ALTER TABLE ESHOP_CART_ITEM ALTER COLUMN VEHICLE_JSON [nvarchar](MAX) NULL
        ALTER TABLE ESHOP_CART_ITEM ALTER COLUMN ITEM_DESC [nvarchar](MAX) NULL
        ALTER TABLE ESHOP_CART_ITEM ALTER COLUMN ATTACHED_ARTICLES_JSON [nvarchar](MAX) NULL

        ALTER TABLE INVOICE_HISTORY ALTER COLUMN COMPANY_NAME [nvarchar](50) NULL
        ALTER TABLE INVOICE_HISTORY ALTER COLUMN LAST_NAME [nvarchar](50) NULL
        ALTER TABLE INVOICE_HISTORY ALTER COLUMN FIRST_NAME [nvarchar](50) NULL
        ALTER TABLE INVOICE_HISTORY ALTER COLUMN SEARCH_TERM [nvarchar](20) NULL
        ALTER TABLE INVOICE_HISTORY ALTER COLUMN STREET [nvarchar](50) NULL
        ALTER TABLE INVOICE_HISTORY ALTER COLUMN PLACE [nvarchar](50) NULL

        ALTER TABLE MESSAGE_LANGUAGE ALTER COLUMN CONTENT [nvarchar](MAX) NULL

        ALTER TABLE ORG_COLLECTION_SETTINGS ALTER COLUMN SETTING_VALUE [nvarchar](255) NULL

    </sql>
  </changeSet>

  <changeSet author="CONNECT_APP" id="ITER_182_N_VAR_CHAR_RECREATE_V_USER_VEHICLE_HISTORY">
    <sql>     
      CREATE VIEW [dbo].[V_USER_VEHICLE_HISTORY] with schemabinding AS
        SELECT 
          UVH.ID AS ID,
          U.ID AS USER_ID,
          U.USERNAME AS USER_NAME,
          U.FIRST_NAME AS FIRST_NAME,
          U.LAST_NAME AS LAST_NAME,
          CONCAT(U.LAST_NAME, ' ', U.FIRST_NAME) AS FULL_NAME,
          OG.ORGANISATION_ID AS ORG_ID,
          O.ORG_CODE AS ORG_CODE,
          VH.VEH_ID AS VEHICLE_ID,
          VH.VEH_NAME AS VEHICLE_NAME,
          UVH.SEARCH_TERM AS SEARCH_TERM,
          UVH.SEARCH_MODE AS SEARCH_MODE,
          UVH.FROM_SOURCE AS FROM_SOURCE,
          UVH.SELECT_DATE AS SELECT_DATE
          from
          dbo.VEHICLE_HISTORY VH
          JOIN dbo.USER_VEHICLE_HISTORY UVH ON VH.ID = UVH.VEH_HISTORY_ID
          JOIN dbo.ESHOP_USER U ON UVH.USER_ID = U.ID
          JOIN dbo.GROUP_USER GU ON
          U.ID = GU.USER_ID
          JOIN dbo.ESHOP_GROUP G ON GU.GROUP_ID = G.ID
          JOIN
          dbo.GROUP_ROLE GR ON GR.GROUP_ID = G.ID
          JOIN dbo.ESHOP_ROLE R ON
          GR.ROLE_ID = R.ID
          JOIN dbo.ORGANISATION_GROUP OG ON G.ID =
          OG.GROUP_ID
          JOIN dbo.ORGANISATION O ON O.ID = OG.ORGANISATION_ID
          JOIN dbo.LOGIN L ON L.USER_ID = U.ID
          JOIN dbo.USER_SETTINGS US ON
          US.ID = U.SETTING
          JOIN dbo.SALUTATION SL ON SL.ID = U.SALUTATION
          WHERE L.IS_USER_ACTIVE = 1

    </sql>
  </changeSet>

  <changeSet author="CONNECT_APP" id="ITER_182_N_VAR_CHAR_RECREATE_V_USER_DETAIL">
    <sql>     
      CREATE VIEW [dbo].[V_USER_DETAIL]
          with schemabinding
          AS
          SELECT U.ID AS USER_ID,
          U.USERNAME AS USER_NAME,
          U.EMAIL AS USER_EMAIL,
          U.FIRST_NAME AS FIRST_NAME,
          U.LAST_NAME AS LAST_NAME,
          U.PHONE AS TELEPHONE,
          US.ID AS USER_SETTING_ID,
          U.TYPE AS USER_TYPE,
          US.SALE_ON_BEHALF_OF AS SALE_ON_BEHALF_OF, -- deprecated
          R.ID AS    ROLE_ID,
          R.NAME AS ROLE_NAME,
          G.ID AS GROUP_ID,
          G.NAME AS GROUP_NAME,
          OG.ORGANISATION_ID AS ORG_ID,
          O.PARENT_ID AS ORG_PARENT_ID,
          O.ORG_CODE AS ORG_CODE,
          O.SHORTNAME AS ORG_SHORT_NAME,
          O.NAME AS ORG_NAME,
          O.ORDER_SETTINGS_ID AS ORG_SETTINGS_ID,
          SL.CODE AS SALUT_CODE,
          SL.ID AS SALUT_ID,
          L.FIRST_LOGIN_DATE AS FIRST_LOGIN_DATE,
          U.SIGN_IN_DATE AS LAST_LOGIN_DATE,
          U.LANGUAGE AS LANGUAGE_ID,
          U.NEWSLETTER AS NEWSLETTER
          from
          dbo.ESHOP_USER U
          JOIN dbo.GROUP_USER GU ON
          U.ID = GU.USER_ID
          JOIN dbo.ESHOP_GROUP G ON GU.GROUP_ID = G.ID
          JOIN
          dbo.GROUP_ROLE GR ON GR.GROUP_ID = G.ID
          JOIN dbo.ESHOP_ROLE R ON
          GR.ROLE_ID = R.ID
          JOIN dbo.ORGANISATION_GROUP OG ON G.ID =
          OG.GROUP_ID
          JOIN dbo.ORGANISATION O ON O.ID = OG.ORGANISATION_ID
          JOIN dbo.LOGIN L ON L.USER_ID = U.ID
          JOIN dbo.USER_SETTINGS US ON
          US.ID = U.SETTING
          JOIN dbo.SALUTATION SL ON SL.ID = U.SALUTATION
          WHERE L.IS_USER_ACTIVE = 1

    </sql>
  </changeSet>
  
  <changeSet author="CONNECT_APP" id="ITER_182_N_VAR_CHAR_RECREATE_V_COLLECTION_SEARCH">
    <sql>     
      CREATE VIEW [dbo].[V_COLLECTION_SEARCH] AS
          SELECT temp.NAME
          COLLECTION_NAME,
          temp.SHORTNAME AFFILIATE,
          STUFF(
          (SELECT CAST(', ' AS
          varchar(max)) + L.ORG_CODE
          FROM ORGANISATION as L
          WHERE L.ID in (
          SELECT
          top 5 LR.ORGANISATION_ID FROM COLLECTION_RELATION LR
          JOIN ORGANISATION
          oga on oga.ID = LR.ORGANISATION_ID
          JOIN ORGANISATION_TYPE ota on
          oga.ORGTYPE_ID = ota.ID
          WHERE LR.COLLECTION_ID = temp.ID AND
          ota.[LEVEL]= 3)
          FOR XML PATH(''), TYPE
          )
          .value('.', 'nvarchar(max)'),1,
          1,'') AS CUSTOMER_NR,
          temp.COLLECTION_SHORT_NAME COLLECTION_SHORT_NAME
          FROM (
          SELECT DISTINCT orgColl.ID, orgColl.NAME, aff.SHORTNAME,
          orgColl.SHORTNAME
          COLLECTION_SHORT_NAME from
          ORGANISATION_COLLECTION
          orgColl
          join ORGANISATION aff on aff.ID = orgColl.AFFILIATE_ID
          where
          aff.SHORTNAME != 'sag'
          ) AS temp
    </sql>
  </changeSet>
  
  
  <changeSet author="CONNECT_APP" id="ITER_182_N_VAR_CHAR_RECREATE_V_FINAL_CUSTOMER">
    <sql>     
      CREATE VIEW [dbo].[V_FINAL_CUSTOMER] AS
        SELECT
        ORG.ID AS ORG_ID,
        ORG.NAME AS NAME,
        ORG.DESCRIPTION AS DESCRIPTION,
        ORG.PARENT_ID AS PARENT_ORG_ID,
        STUFF((SELECT CAST(' ' AS varchar(max)) + FP.VALUE FROM FINAL_CUSTOMER_PROPERTY FP
        WHERE FP.ORG_ID = ORG.ID AND FP.SETTING_KEY = 'TYPE' FOR XML
        PATH(''), TYPE).value('.', 'varchar(max)'), 1, 1, '') AS
        FINAL_CUSTOMER_TYPE,
        STUFF((SELECT CAST(' ' AS varchar(max)) + FP.VALUE FROM FINAL_CUSTOMER_PROPERTY FP
        WHERE FP.ORG_ID = ORG.ID AND FP.SETTING_KEY IN ('STREET', 'POSTCODE', 'PLACE') ORDER BY
        (CASE FP.SETTING_KEY  WHEN 'STREET' THEN 1 WHEN 'POSTCODE' THEN 2 WHEN 'PLACE' THEN 3 END) ASC FOR XML PATH(''),
        TYPE).value('.', 'nvarchar(max)'), 1, 1, '') AS ADDRESS_INFO,
        STUFF((SELECT CAST(' ' AS varchar(max)) + FP.VALUE FROM
        FINAL_CUSTOMER_PROPERTY FP WHERE FP.ORG_ID = ORG.ID AND
        FP.SETTING_KEY IN ('SURNAME', 'FIRSTNAME')  ORDER BY
        (CASE FP.SETTING_KEY  WHEN 'SURNAME' THEN 1 WHEN 'FIRSTNAME' THEN 2 END) ASC FOR XML PATH(''),
        TYPE).value('.', 'nvarchar(max)'), 1, 1, '') AS CONTACT_INFO,
        (SELECT FP.VALUE FROM FINAL_CUSTOMER_PROPERTY FP WHERE FP.ORG_ID = ORG.ID AND FP.SETTING_KEY = 'STATUS') AS STATUS,
        (SELECT CASE WHEN COUNT(FO.ID) > 0 THEN '1' ELSE '0' END FROM FINAL_CUSTOMER_ORDER FO WHERE FO.ORG_ID = ORG.ID AND FO.STATUS IN('NEW','OPEN')) AS HAS_IN_PROGRESS_ORDERS
        FROM [dbo].ORGANISATION ORG
        INNER JOIN [dbo].ORGANISATION_TYPE ORG_TYPE ON ORG.ORGTYPE_ID =
        ORG_TYPE.ID
        WHERE ORG_TYPE.NAME = 'FINAL_CUSTOMER'

    </sql>
  </changeSet>
</databaseChangeLog>