<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ROLE_TYPE">
        <sql>
            INSERT INTO	dbo.ROLE_TYPE (NAME,DESCRIPTION)
            VALUES ('ADMIN','Administrator role, including sag admin, group admin, user admin'),
            ('ASSISTANT','Assistant role, including marketing and sales'),
            ('NORMAL_USER','Normal user role, including customer and its employees');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_LANGUAGES">
        <sql>
            INSERT INTO dbo.LANGUAGES
            (LANGCODE, LANGISO, DESCRIPTION)
            VALUES ('LANG_DE', 'DE', 'German'),
            ('LANG_EN', 'EN', 'English'),
            ('LANG_SR', 'SR', 'Latin Serbian');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_INVOICE_TYPE">
        <sql>
            INSERT INTO dbo.INVOICE_TYPE (INVOICE_TYPE_CODE,INVOICE_TYPE_NAME,INVOICE_TYPE_DESC) VALUES
            ('SINGLE_INVOICE','EINZELFAKT','Einzelfaktura')
            ,('TWO_WEEKLY_INVOICE','2WSAMFAKT','2 Wochensammel')
            ,('WEEKLY_INVOICE','WOCHENFAKT','Wochenfaktura')
            ,('DAILY_INVOICE','TAGSAMFAKT','Tagessammel')
            ,('ACCUMULATIVE_INVOICE','ALLESAM','Alle Sammelfakturen')
            ,('MONTHLY_INVOICE','1MSAMFAKT','Monatssammel')
            ,('TWO_WEEKLY_INVOICE_WITH_CREDIT_SEPARATION','2WFAKTGT','2 Wochen Faktura mit Gutschriftstrennung')
            ,('SINGLE_INVOICE_WITH_CREDIT_SEPARATION','EINZELFAGT','Fakturierung pro Auftrag mit Gutschriftstennung')
            ,('MONTHLY_INVOICE_WITH_CREDIT_SEPARATION','MONATSFAGT','Monatsfaktura mit Gutschriftstrennung')
            ,('DAILY_INVOICE_WITH_CREDIT_SEPARATION','TAGESFAGT','Tagesfaktura mit Gutschriftstrennung')

            INSERT INTO dbo.INVOICE_TYPE (INVOICE_TYPE_CODE,INVOICE_TYPE_NAME,INVOICE_TYPE_DESC) VALUES
            ('WEEKLY_INVOICE_WITH_CREDIT_SEPARATION','WOCHENFAGT','Wochenfaktura mit Gutschriftstrennung')
            ,('MONTHLY_INVOICE_WEEKLY_CREDIT_SEPARATION','MONATSFAGW	','')
            ,('DEFAULT','DEFAULT','!!Nicht löschen!! Fallback mit Zuweisung auf Alle')
            ,('TWO_WEEKLY_INVOICE_DAILY_CREDIT','2WFAKTGX','2 Wochen Faktura mit täglicher Gutschrift')
            ,('MONTHLY_INVOICE_DAILY_CREDIT','MONATSFAGX','Monatsfaktura mit täglicher Gutschrift')
            ,('WEEKLY_INVOICE_SINGLE_CREDIT','WOCHENFAGE','Wochenfaktura mit Einzelgutschrift wöchentlich')
            ,('WEEKLY_INVOICE_DAILY_CREDIT','WOCHENFAGX','Wochenfaktura mit täglicher Gutschrift')
            ,('ALL','ALLE','Fallbackprofil');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ALLOCATION_TYPE">
        <sql>
            INSERT INTO dbo.ALLOCATION_TYPE
            ([TYPE], DESC_CODE, DESCRIPTION)
            VALUES('Verrechnung gemäss Vereinbarung', 'ALLOCATION_TYPE1', 'Verrechnung gemäss Vereinbarung'),
            ('Verrechnung als Einzelfaktura', 'ALLOCATION_TYPE2', 'Verrechnung als Einzelfaktura');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_COLLECTIVE_DELIVERY">
        <sql>
            INSERT INTO dbo.COLLECTIVE_DELIVERY
            ([TYPE], DESC_CODE, DESCRIPTION)
            VALUES('Ich benötige die verfügbare Ware dringend. Bitte senden Sie mir die verfügbaren Artikel schnellst möglich.', 'COLLECTIVE_DELIVERY1', 'Ich benötige die verfügbare Ware dringend. Bitte senden Sie mir die verfügbaren Artikel schnellst möglich.'),
            ('Die Ware wird nicht dringend benötigt. Bitte senden Sie mir die Ware in einer Lieferung, sobald sie verfügbar ist.', 'COLLECTIVE_DELIVERY2', 'Die Ware wird nicht dringend benötigt. Bitte senden Sie mir die Ware in einer Lieferung, sobald sie verfügbar ist.');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_DELIVERY_TYPE">
        <sql>
            INSERT INTO dbo.DELIVERY_TYPE
            ([TYPE], DESC_CODE, DESCRIPTION)
            VALUES('Abholung in Filiale', 'PICKUP', 'Abholung in Filiale'),
            ('Lieferung gemäss Tourenpla', 'TOUR', 'Lieferung gemäss Tourenplan');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_DELIVERY_TYPE_COURIER">
        <sql>
            INSERT INTO DELIVERY_TYPE(TYPE,	DESC_CODE,	DESCRIPTION) VALUES('Courier', 'COURIER', 'Courier')
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ORGANISATION_TYPE">
        <sql>
            INSERT INTO dbo.ORGANISATION_TYPE (NAME,[LEVEL],DESCRIPTION) VALUES
            ('SYSTEM',1,'This is SAG System organisation')
            ,('AFFILIATE',2,'This is Affiliate organisation')
            ,('CUSTOMER',3,'This is Customer organisation')
            ,('FINAL_CUSTOMER',4,'This is Wholesaler organisation');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ESHOP_ROLE">
        <sql>
			DECLARE @role_type_admin_id INT = (select ID from ROLE_TYPE where name='ADMIN')
			DECLARE @role_type_assistant_id INT = (select ID from ROLE_TYPE where name='ASSISTANT')
			DECLARE @role_type_normal_user_id INT = (select ID from ROLE_TYPE where name='NORMAL_USER')
			
            INSERT INTO dbo.ESHOP_ROLE (NAME,ROLE_TYPE_ID,DESCRIPTION) VALUES
            ('SYSTEM_ADMIN', @role_type_admin_id,'SAG System admin role')
            ,('GROUP_ADMIN', @role_type_admin_id,'Group admin role')
            ,('USER_ADMIN', @role_type_admin_id,'User admin role')
            ,('SALES_ASSISTANT', @role_type_assistant_id,'Sales assistant role')
            ,('MARKETING_ASSISTANT', @role_type_assistant_id,'Marketing assistant role')
            ,('NORMAL_USER', @role_type_normal_user_id,'User Role')
            ,('FINAL_USER_ADMIN', @role_type_admin_id,'Wholesaler User Admin Role')
            ,('FINAL_NORMAL_USER',@role_type_normal_user_id,'Wholesaler Normal User Role');
        </sql>
    </changeSet>

	<changeSet author="CONNECT_APP"
		id="ITER_167_INIT_PAYMENT_METHOD_SERBIA">
		<sql>
			INSERT INTO dbo.PAYMENT_METHOD
			(PAY_METHOD,DESC_CODE,DESCRIPTION,ORDER_DISPLAY) VALUES
			('Cash','CASH','Cash',1)
			,('Bill','BILL','Bill payment',2);
		</sql>
	</changeSet>

	<changeSet author="CONNECT_APP"
		id="ITER_167_INIT_PAYMENT_METHOD_SERBIA_WHOLESALE">
		<sql>
		    UPDATE dbo.PAYMENT_METHOD SET DESC_CODE = 'WHOLESALE' where  DESC_CODE = 'BILL'
		</sql>
	</changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ORGANISATION">
        <sql>
            INSERT INTO dbo.ORGANISATION (NAME,ORG_CODE,ORGTYPE_ID,PARENT_ID,DESCRIPTION,SHORTNAME,ORDER_SETTINGS_ID) VALUES
            ('Swiss-Automotive-Group','000000',1,0,'This is Swiss Automotive Group organisation','sag',NULL)
            ,('Wint-Serbia','1000000',2,1,'This is Wint-Serbia organisation','wt-sb',NULL);
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_CUSTOMER_SETTING_FOR_SAG_AND_WINT_SB">
        <sql>
			INSERT INTO dbo.CUSTOMER_SETTINGS (ALLOCATION_ID,PAYMENT_METHOD,DELIVERY_ID,COLLECTIVE_DELIVERY_ID,NET_PRICE_VIEW,NET_PRICE_CONFIRM,VIEW_BILLING,ADDRESS_ID,USE_DEFAULT_SETTING,EMAIL_NOTIFICATION_ORDER,BILLING_ADDRESS_ID,DELIVERY_ADDRESS_ID,ALLOW_NET_PRICE_CHANGED,INVOICE_TYPE,SHOW_DISCOUNT,SESSION_TIMEOUT_SECONDS,SHOW_OCI_VAT,DEMO_CUSTOMER,NORMAUTO_DISPLAY,HAS_PARTNER_PROGRAM_VIEW)
			VALUES (1,1,1,2,1,1,0,0,0,0,0,'0','1',1,1,0,3600,0,0,1)
			DECLARE @sag_organisation_id int = (select @@IDENTITY)
			UPDATE ORGANISATION SET ORDER_SETTINGS_ID = @sag_organisation_id WHERE SHORTNAME = 'sag'
			
			INSERT INTO dbo.CUSTOMER_SETTINGS (ALLOCATION_ID,PAYMENT_METHOD,DELIVERY_ID,COLLECTIVE_DELIVERY_ID,NET_PRICE_VIEW,NET_PRICE_CONFIRM,VIEW_BILLING,ADDRESS_ID,USE_DEFAULT_SETTING,EMAIL_NOTIFICATION_ORDER,BILLING_ADDRESS_ID,DELIVERY_ADDRESS_ID,ALLOW_NET_PRICE_CHANGED,INVOICE_TYPE,SHOW_DISCOUNT,SESSION_TIMEOUT_SECONDS,SHOW_OCI_VAT,DEMO_CUSTOMER,NORMAUTO_DISPLAY,HAS_PARTNER_PROGRAM_VIEW)
			VALUES (1,1,1,2,1,1,0,0,0,0,0,'0','1',1,1,0,3600,0,0,1)
			DECLARE @wt_sb_organisation_id int = (select @@IDENTITY)
			UPDATE ORGANISATION SET ORDER_SETTINGS_ID = @wt_sb_organisation_id WHERE SHORTNAME = 'wt-sb'
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ORGANISATION_COLLECTION">
        <sql>
            DECLARE @sag_id INT = (select ID from ORGANISATION o where SHORTNAME='sag')
            DECLARE @wt_sb_id INT = (select ID from ORGANISATION where SHORTNAME = 'wt-sb')
            INSERT INTO dbo.ORGANISATION_COLLECTION (NAME,AFFILIATE_ID,DESCRIPTION,SHORTNAME) VALUES
            ('Swiss-Automotive-Group',@sag_id,'This is the Default Collection','sag')
            ,('Wint-Serbia-collection',@wt_sb_id,'This is the Default Collection', 'wt-sb');
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_COLLECTION_RELATION">
        <sql>
            DECLARE @sag_id INT = (select ID from ORGANISATION o where SHORTNAME='sag')
            DECLARE @wt_sb_id INT = (select ID from ORGANISATION where SHORTNAME = 'wt-sb')		
            DECLARE @sag_collection_id INT = (SELECT ID FROM ORGANISATION_COLLECTION WHERE SHORTNAME = 'sag')
            DECLARE @wt_sb_collection_id INT = (SELECT ID FROM ORGANISATION_COLLECTION WHERE SHORTNAME = 'wt-sb')
            INSERT INTO dbo.COLLECTION_RELATION (COLLECTION_ID,ORGANISATION_ID,IS_ACTIVE) VALUES
            (@sag_collection_id,@sag_id, 1)
            ,(@wt_sb_collection_id,@wt_sb_id, 1);
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ESHOP_CLIENT_RESOURCE">
        <sql>
            INSERT INTO dbo.ESHOP_CLIENT_RESOURCE
            (NAME, DESCRIPTION, ACTIVE)
            VALUES('sag-rest', 'SAG Core Rest API Services', 1)

            INSERT INTO dbo.ESHOP_CLIENT_RESOURCE
            (NAME, DESCRIPTION, ACTIVE)
            VALUES('sag-admin', 'SAG Core Admin API Services', 1)
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ESHOP_CLIENT">
        <sql>
			-- eshop-web-yztAhGpFW Fd73piTIWo3ugFdHNy9hpe3IRkFd1x7TeNFraqQ
            INSERT INTO dbo.ESHOP_CLIENT
            (CLIENT_NAME, CLIENT_SECRET, RESOURCE_ID, ACTIVE)
            VALUES('eshop-web', 'Fd73piTIWo3ugFdHNy9hpe3IRkFd1x7TeNFraqQ', 1, 1)

			-- same as ax
            INSERT INTO dbo.ESHOP_CLIENT
            (CLIENT_NAME, CLIENT_SECRET, RESOURCE_ID, ACTIVE)
            VALUES('eshop-admin', 'FdmY8MuouKxlsFd6aZdGhlaFHwFdeQZ6gCTGbNg', 2, 1)
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_ADD_COLLECTION_SETTING_SERBIAN_LOCALE">
        <sql>
			DECLARE @wint_serbia_collection_id int = (select ID from ORGANISATION_COLLECTION where SHORTNAME='wt-sb')
			insert into ORG_COLLECTION_SETTINGS(COLLECTION_ID, SETTING_KEY, SETTING_VALUE) values (@wint_serbia_collection_id , 'setting_locale', 'sr_RS')
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_DATA_SALUTATION">
        <sql>
			INSERT INTO dbo.SALUTATION (CODE, DESCRIPTION, TYPE) VALUES
			('SALUTATION_DR', 'Dr.', 'PROFILE'),
			('SALUTATION_I', 'I', 'PROFILE'),
			('SALUTATION_II', 'II', 'PROFILE'),
			('SALUTATION_III', 'III', 'PROFILE'),
			('SALUTATION_JR', 'Jr.', 'PROFILE'),
			('SALUTATION_MISS', 'Miss', 'PROFILE'),
			('SALUTATION_MR', 'Mr', 'PROFILE'),
			('SALUTATION_MRS', 'Mrs.', 'PROFILE'),
			('SALUTATION_MS', 'Ms.', 'PROFILE'),
			('SALUTATION_SR', 'Sr.', 'PROFILE'),
			('SALUTATION_OTHER', 'Other', 'PROFILE'),
			('GENERAL_SALUTATION_COMPANY', 'Company', 'OFFER'),
			('GENERAL_SALUTATION_MALE', 'Male', 'OFFER'),
			('GENERAL_SALUTATION_FEMALE', 'Female', 'OFFER');
        </sql>
    </changeSet>


    <changeSet author="CONNECT_APP" id="ITER_130_INIT_DATA_COUNTRY">
        <sql>
			INSERT INTO COUNTRY (CODE, SHORT_NAME, FULL_NAME, SHORT_CODE)
			VALUES
			('ABW', 'Aruba', 'Aruba', NULL),
			('AFG', 'Afghanistan', 'Afghanistan', NULL),
			('AGO', 'Angola', 'Angola', NULL),
			('AIA', 'Anguilla', 'Anguilla', NULL),
			('ALA', 'Åland Islands', 'Åland Islands', NULL),
			('ALB', 'Albania', 'Albania', NULL),
			('AND', 'Andorra', 'Andorra', NULL),
			('ANT', 'Netherlands Antilles', 'Netherlands Antilles', NULL),
			('ARE', 'United Arab Emirates', 'United Arab Emirates', NULL),
			('ARG', 'Argentina', 'Argentina', NULL),
			('ARM', 'Armenia', 'Armenia', NULL),
			('ASM', 'American Samoa', 'American Samoa', NULL),
			('ATA', 'Antarctica', 'Antarctica', NULL),
			('ATF', 'French Southern and Antarctic Lands', 'French Southern and Antarctic Lands', NULL),
			('ATG', 'Antigua and Barbuda', 'Antigua and Barbuda', NULL),
			('AUS', 'Australia', 'Australia', NULL),
			('AUT', 'Austria', 'Austria', 'at'),
			('AZE', 'Azerbaijan', 'Azerbaijan', NULL),
			('BDI', 'Burundi', 'Burundi', NULL),
			('BEL', 'Belgium', 'Belgium', NULL),
			('BEN', 'Benin', 'Benin', NULL),
			('BFA', 'Burkina Faso', 'Burkina Faso', NULL),
			('BGD', 'Bangladesh', 'Bangladesh', NULL),
			('BGR', 'Bulgaria', 'Bulgaria', NULL),
			('BHR', 'Bahrain', 'Bahrain', NULL),
			('BHS', 'Bahamas', 'Bahamas', NULL),
			('BIH', 'Bosnia and Herzegovina', 'Bosnia and Herzegovina', NULL),
			('BLM', 'Saint Barthélemy', 'Saint Barthélemy', NULL),
			('BLR', 'Belarus', 'Belarus', NULL),
			('BLZ', 'Belize', 'Belize', NULL),
			('BMU', 'Bermuda', 'Bermuda', NULL),
			('BOL', 'Bolivia', 'Bolivia', NULL),
			('BRA', 'Brazil', 'Brazil', NULL),
			('BRB', 'Barbados', 'Barbados', NULL),
			('BRN', 'Brunei', 'Brunei', NULL),
			('BTN', 'Bhutan', 'Bhutan', NULL),
			('BVT', 'Bouvet Island', 'Bouvet Island', NULL),
			('BWA', 'Botswana', 'Botswana', NULL),
			('CAF', 'Central African Republic', 'Central African Republic', NULL),
			('CAN', 'Canada', 'Canada', NULL),
			('CCK', 'Cocos (Keeling), Islands', 'Cocos (Keeling), Islands', NULL),
			('CHE', 'Switzerland', 'Switzerland', 'ch'),
			('CHL', 'Chile', 'Chile', NULL),
			('CHN', 'China', 'China', NULL),
			('CIV', 'Côte d’Ivoire', 'Côte d’Ivoire', NULL),
			('CMR', 'Cameroon', 'Cameroon', NULL),
			('COD', 'Congo (DRC),', 'Congo (DRC),', NULL),
			('COG', 'Congo', 'Congo', NULL),
			('COK', 'Cook Islands', 'Cook Islands', NULL),
			('COL', 'Colombia', 'Colombia', NULL),
			('COM', 'Comoros', 'Comoros', NULL),
			('CPV', 'Cape Verde', 'Cape Verde', NULL),
			('CRI', 'Costa Rica', 'Costa Rica', NULL),
			('CUB', 'Cuba', 'Cuba', NULL),
			('CXR', 'Christmas Island', 'Christmas Island', NULL),
			('CYM', 'Cayman Islands', 'Cayman Islands', NULL),
			('CYP', 'Cyprus', 'Cyprus', NULL),
			('CZE', 'Czech Republic', 'Czech Republic', NULL),
			('DEU', 'Germany', 'Germany', NULL),
			('DJI', 'Djibouti', 'Djibouti', NULL),
			('DMA', 'Dominica', 'Dominica', NULL),
			('DNK', 'Denmark', 'Denmark', NULL),
			('DOM', 'Dominican Republic', 'Dominican Republic', NULL),
			('DZA', 'Algeria', 'Algeria', NULL),
			('ECU', 'Ecuador', 'Ecuador', NULL),
			('EGY', 'Egypt', 'Egypt', NULL),
			('ERI', 'Eritrea', 'Eritrea', NULL),
			('ESP', 'Spain', 'Spain', NULL),
			('EST', 'Estonia', 'Estonia', NULL),
			('ETH', 'Ethiopia', 'Ethiopia', NULL),
			('FIN', 'Finland', 'Finland', NULL),
			('FJI', 'Fiji', 'Fiji', NULL),
			('FLK', 'Falkland Islands (Islas Malvinas),', 'Falkland Islands (Islas Malvinas),', NULL),
			('FRA', 'France', 'France', NULL),
			('FRO', 'Faroe Islands', 'Faroe Islands', NULL),
			('FSM', 'Micronesia', 'Micronesia', NULL),
			('GAB', 'Gabon', 'Gabon', NULL),
			('GBR', 'United Kingdom', 'United Kingdom', NULL),
			('GEO', 'Georgia', 'Georgia', NULL),
			('GGY', 'Guernsey', 'Guernsey', NULL),
			('GHA', 'Ghana', 'Ghana', NULL),
			('GIB', 'Gibraltar', 'Gibraltar', NULL),
			('GIN', 'Guinea', 'Guinea', NULL),
			('GLP', 'Guadeloupe', 'Guadeloupe', NULL),
			('GMB', 'Gambia', 'Gambia', NULL),
			('GNB', 'Guinea-Bissau', 'Guinea-Bissau', NULL),
			('GNQ', 'Equatorial Guinea', 'Equatorial Guinea', NULL),
			('GRC', 'Greece', 'Greece', NULL),
			('GRD', 'Grenada', 'Grenada', NULL),
			('GRL', 'Greenland', 'Greenland', NULL),
			('GTM', 'Guatemala', 'Guatemala', NULL),
			('GUF', 'French Guiana', 'French Guiana', NULL),
			('GUM', 'Guam', 'Guam', NULL),
			('GUY', 'Guyana', 'Guyana', NULL),
			('HKG', 'Hong Kong SAR', 'Hong Kong SAR', NULL),
			('HMD', 'Heard Island and McDonald Islands', 'Heard Island and McDonald Islands', NULL),
			('HND', 'Honduras', 'Honduras', NULL),
			('HRV', 'Croatia', 'Croatia', NULL),
			('HTI', 'Haiti', 'Haiti', NULL),
			('HUN', 'Hungary', 'Hungary', NULL),
			('IDN', 'Indonesia', 'Indonesia', NULL),
			('IMN', 'Isle of Man', 'Isle of Man', NULL),
			('IND', 'India', 'India', NULL),
			('IOT', 'British Indian Ocean Territory', 'British Indian Ocean Territory', NULL),
			('IRL', 'Ireland', 'Ireland', NULL),
			('IRN', 'Iran', 'Iran', NULL),
			('IRQ', 'Iraq', 'Iraq', NULL),
			('ISL', 'Iceland', 'Iceland', NULL),
			('ISR', 'Israel', 'Israel', NULL),
			('ITA', 'Italy', 'Italy', NULL),
			('JAM', 'Jamaica', 'Jamaica', NULL),
			('JEY', 'Jersey', 'Jersey', NULL),
			('JOR', 'Jordan', 'Jordan', NULL),
			('JPN', 'Japan', 'Japan', NULL),
			('KAZ', 'Kazakhstan', 'Kazakhstan', NULL),
			('KEN', 'Kenya', 'Kenya', NULL),
			('KGZ', 'Kyrgyzstan', 'Kyrgyzstan', NULL),
			('KHM', 'Cambodia', 'Cambodia', NULL),
			('KIR', 'Kiribati', 'Kiribati', NULL),
			('KNA', 'Saint Kitts and Nevis', 'Saint Kitts and Nevis', NULL),
			('KOR', 'Korea', 'Korea', NULL),
			('KWT', 'Kuwait', 'Kuwait', NULL),
			('LAO', 'Laos', 'Laos', NULL),
			('LBN', 'Lebanon', 'Lebanon', NULL),
			('LBR', 'Liberia', 'Liberia', NULL),
			('LBY', 'Libya', 'Libya', NULL),
			('LCA', 'Saint Lucia', 'Saint Lucia', NULL),
			('LIE', 'Liechtenstein', 'Liechtenstein', NULL),
			('LKA', 'Sri Lanka', 'Sri Lanka', NULL),
			('LSO', 'Lesotho', 'Lesotho', NULL),
			('LTU', 'Lithuania', 'Lithuania', NULL),
			('LUX', 'Luxembourg', 'Luxembourg', NULL),
			('LVA', 'Latvia', 'Latvia', NULL),
			('MAC', 'Macao SAR', 'Macao SAR', NULL),
			('MAF', 'Saint Martin', 'Saint Martin', NULL),
			('MAR', 'Morocco', 'Morocco', NULL),
			('MCO', 'Monaco', 'Monaco', NULL),
			('MDA', 'Moldova', 'Moldova', NULL),
			('MDG', 'Madagascar', 'Madagascar', NULL),
			('MDV', 'Maldives', 'Maldives', NULL),
			('MEX', 'Mexico', 'Mexico', NULL),
			('MHL', 'Marshall Islands', 'Marshall Islands', NULL),
			('MKD', 'Macedonia', 'Macedonia', NULL),
			('MLI', 'Mali', 'Mali', NULL),
			('MLT', 'Malta', 'Malta', NULL),
			('MMR', 'Myanmar', 'Myanmar', NULL),
			('MNE', 'Montenegro', 'Montenegro', NULL),
			('MNG', 'Mongolia', 'Mongolia', NULL),
			('MNP', 'Northern Mariana Islands', 'Northern Mariana Islands', NULL),
			('MOZ', 'Mozambique', 'Mozambique', NULL),
			('MRT', 'Mauritania', 'Mauritania', NULL),
			('MSR', 'Montserrat', 'Montserrat', NULL),
			('MTQ', 'Martinique', 'Martinique', NULL),
			('MUS', 'Mauritius', 'Mauritius', NULL),
			('MWI', 'Malawi', 'Malawi', NULL),
			('MYS', 'Malaysia', 'Malaysia', NULL),
			('MYT', 'Mayotte', 'Mayotte', NULL),
			('NAM', 'Namibia', 'Namibia', NULL),
			('NCL', 'New Caledonia', 'New Caledonia', NULL),
			('NER', 'Niger', 'Niger', NULL),
			('NFK', 'Norfolk Island', 'Norfolk Island', NULL),
			('NGA', 'Nigeria', 'Nigeria', NULL),
			('NIC', 'Nicaragua', 'Nicaragua', NULL),
			('NIU', 'Niue', 'Niue', NULL),
			('NLD', 'Netherlands', 'Netherlands', NULL),
			('NOR', 'Norway', 'Norway', NULL),
			('NPL', 'Nepal', 'Nepal', NULL),
			('NRU', 'Nauru', 'Nauru', NULL),
			('NZL', 'New Zealand', 'New Zealand', NULL),
			('OMN', 'Oman', 'Oman', NULL),
			('PAK', 'Pakistan', 'Pakistan', NULL),
			('PAN', 'Panama', 'Panama', NULL),
			('PCN', 'Pitcairn Islands', 'Pitcairn Islands', NULL),
			('PER', 'Peru', 'Peru', NULL),
			('PHL', 'Philippines', 'Philippines', NULL),
			('PLW', 'Palau', 'Palau', NULL),
			('PNG', 'Papua New Guinea', 'Papua New Guinea', NULL),
			('POL', 'Poland', 'Poland', NULL),
			('PRI', 'Puerto Rico', 'Puerto Rico', NULL),
			('PRK', 'North Korea', 'North Korea', NULL),
			('PRT', 'Portugal', 'Portugal', NULL),
			('PRY', 'Paraguay', 'Paraguay', NULL),
			('PSE', 'Palestinian Authority', 'Palestinian Authority', NULL),
			('PYF', 'French Polynesia', 'French Polynesia', NULL),
			('QAT', 'Qatar', 'Qatar', NULL),
			('REU', 'Reunion', 'Reunion', NULL),
			('ROU', 'Romania', 'Romania', NULL),
			('RUS', 'Russia', 'Russia', NULL),
			('RWA', 'Rwanda', 'Rwanda', NULL),
			('SAU', 'Saudi Arabia', 'Saudi Arabia', NULL),
			('SDN', 'Sudan', 'Sudan', NULL),
			('SEN', 'Senegal', 'Senegal', NULL),
			('SGP', 'Singapore', 'Singapore', NULL),
			('SGS', 'South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands', NULL),
			('SHN', 'Saint Helena', 'Saint Helena', NULL),
			('SJM', 'Svalbard and Jan Mayen Island', 'Svalbard and Jan Mayen Island', NULL),
			('SLB', 'Solomon Islands', 'Solomon Islands', NULL),
			('SLE', 'Sierra Leone', 'Sierra Leone', NULL),
			('SLV', 'El Salvador', 'El Salvador', NULL),
			('SMR', 'San Marino', 'San Marino', NULL),
			('SOM', 'Somalia', 'Somalia', NULL),
			('SPM', 'Saint Pierre and Miquelon', 'Saint Pierre and Miquelon', NULL),
			('SRB', 'Serbia', 'Serbia', NULL),
			('STP', 'São Tomé and Príncipe', 'São Tomé and Príncipe', NULL),
			('SUR', 'Suriname', 'Suriname', NULL),
			('SVK', 'Slovakia', 'Slovakia', NULL),
			('SVN', 'Slovenia', 'Slovenia', NULL),
			('SWE', 'Sweden', 'Sweden', NULL),
			('SWZ', 'Swaziland', 'Swaziland', NULL),
			('SYC', 'Seychelles', 'Seychelles', NULL),
			('SYR', 'Syria', 'Syria', NULL),
			('TCA', 'Turks and Caicos Islands', 'Turks and Caicos Islands', NULL),
			('TCD', 'Chad', 'Chad', NULL),
			('TGO', 'Togo', 'Togo', NULL),
			('THA', 'Thailand', 'Thailand', NULL),
			('TJK', 'Tajikistan', 'Tajikistan', NULL),
			('TKL', 'Tokelau', 'Tokelau', NULL),
			('TKM', 'Turkmenistan', 'Turkmenistan', NULL),
			('TLS', 'Timor-Leste', 'Timor-Leste', NULL),
			('TON', 'Tonga', 'Tonga', NULL),
			('TTO', 'Trinidad and Tobago', 'Trinidad and Tobago', NULL),
			('TUN', 'Tunisia', 'Tunisia', NULL),
			('TUR', 'Turkey', 'Turkey', NULL),
			('TUV', 'Tuvalu', 'Tuvalu', NULL),
			('TWN', 'Taiwan', 'Taiwan', NULL),
			('TZA', 'Tanzania', 'Tanzania', NULL),
			('UGA', 'Uganda', 'Uganda', NULL),
			('UKR', 'Ukraine', 'Ukraine', NULL),
			('UMI', 'U.S. Minor Outlying Islands', 'U.S. Minor Outlying Islands', NULL),
			('URY', 'Uruguay', 'Uruguay', NULL),
			('USA', 'United States', 'United States', NULL),
			('UZB', 'Uzbekistan', 'Uzbekistan', NULL),
			('VAT', 'Vatican City', 'Vatican City', NULL),
			('VCT', 'Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines', NULL),
			('VEN', 'Venezuela', 'Venezuela', NULL),
			('VGB', 'British Virgin Islands', 'British Virgin Islands', NULL),
			('VIR', 'Virgin Islands', 'Virgin Islands', NULL),
			('VNM', 'Vietnam', 'Vietnam', NULL),
			('VUT', 'Vanuatu', 'Vanuatu', NULL),
			('WLF', 'Wallis and Futuna', 'Wallis and Futuna', NULL),
			('WSM', 'Samoa', 'Samoa', NULL),
			('YEM', 'Yemen', 'Yemen', NULL),
			('ZAF', 'South Africa', 'South Africa', NULL),
			('ZMB', 'Zambia', 'Zambia', NULL),
			('ZWE', 'Zimbabwe', 'Zimbabwe', NULL)

        </sql>
    </changeSet>
    
    <changeSet author="CONNECT_APP" id="ITER_167_INIT_SUPPORTED_AFFILIATE">
        <sql>
			DECLARE @serbia_country_id int = (SELECT ID FROM COUNTRY WHERE CODE = 'SRB')

			INSERT INTO SUPPORTED_AFFILIATE(SHORT_NAME, COMPANY_NAME, DESCRIPTION, COUNTRY_ID, UPDATED_DATE, ES_SHORT_NAME, SALES_ORIGIN_ID, SHOW_PFAND_ARTICLE, LOGO_LINK, NO_REPLY_EMAIL, START_WORKING_TIME, END_WORKING_TIME)
			VALUES ('wt-sb', 'Wint-Serbia', NULL, @serbia_country_id, getdate(), 'srb', '' , 0, '','', '05:00', '17:00')
        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_WINT_SERBIAN_COLLECTION_SETTING">
        <sql>
			DECLARE @serbian_default_collection_id int = (SELECT ID FROM ORGANISATION_COLLECTION WHERE SHORTNAME = 'wt-sb')

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'logo_image')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'logo_image', 'https://s3.exellio.de/connect_media/collections/logo-wtsb.png')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'default_logo')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'default_logo', '../images/logo/logo-der.png')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'background_image')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'background_image', '../images/background/bg-der.jpg')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'default_background')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'default_background', '../images/background/bg-der.jpg')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'description')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'description', 'Wint-Serbia settings')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'theme_color_1')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'theme_color_1', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'theme_color_2')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'theme_color_2', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'font_color_1')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'font_color_1', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'font_color_2')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'font_color_2', 'black')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'back_to_top_arrow_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'back_to_top_arrow_color', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'footer_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'footer_color', '#c0d1e3')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'footer_text_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'footer_text_color', 'black')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'button_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'button_color', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'button_text_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'button_text_color', '#0073be')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'slide_show_paging_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'slide_show_paging_color', 'blue')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'slide_show_paging_color_inactive')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'slide_show_paging_color_inactive', 'blue')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'button_cart_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'button_cart_color', '#f6a60c')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'section_arrow_hover_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'section_arrow_hover_color', '#666666')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'availability_status_color_1')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'availability_status_color_1', '#f6a60c')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'availability_status_color_2')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'availability_status_color_2', '#20bc5d')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'availability_status_color_3')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'availability_status_color_3', 'red')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'information_icon_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'information_icon_color', '#787878')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'vin_notification_color')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'vin_notification_color', '#339900')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'carousel_background')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'carousel_background', '../images/carousel-arrows-derenginger.gif')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'ico_cart')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'ico_cart', '../images/ico-cart-derenginger.png')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'login_image')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'login_image', '../images/login-derenginger.jpg')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'pre_loader')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'pre_loader', '../images/logo/DS-Loader_small.gif')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'default_email')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'default_email', 'chaule@chaule.ch')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'google_analytics_tracking_code')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'google_analytics_tracking_code', 'UA-84230083-4')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'show_tyres_discount')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'show_tyres_discount', 'false')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'show_tyres_gross_price_header')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'show_tyres_gross_price_header', 'true')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'title')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'title', 'Wint-store')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'default_vat_rate')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'default_vat_rate', '8.0')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'default_url')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'default_url', 'https://sb.bbv-demo.ch/wt-sb/')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'currency')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'currency', 'RSD')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'start_work_time')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'start_work_time', '5:00')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'end_work_time')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'end_work_time', '17:00')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'marketing_dept_email')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'marketing_dept_email', 'chau.le@bbv.vn')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'setting_locale')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'setting_locale', 'sr_RS')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'is_customer_abs_enabled')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'is_customer_abs_enabled', 'false')
				  END

			IF NOT EXISTS(SELECT 1 FROM ORG_COLLECTION_SETTINGS WHERE COLLECTION_ID = @serbian_default_collection_id AND SETTING_KEY = 'is_sales_abs_enabled')
				  BEGIN
					INSERT INTO ORG_COLLECTION_SETTINGS (COLLECTION_ID, SETTING_KEY, SETTING_VALUE)
					VALUES (@serbian_default_collection_id, 'is_sales_abs_enabled', 'true')
				  END

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_RELATION_DATA_FOR_ADMIN_BACK_OFFICE">
        <sql>
        	-- ESHOP_GROUP for system admin
			INSERT INTO  dbo.ESHOP_GROUP (NAME, DESCRIPTION)
			VALUES	('SYSTEM_ADMIN', 'SAG System admin group')
			DECLARE @group_id int = (select @@IDENTITY)

			-- GROUP_ROLE for system admin group
			DECLARE @system_admin_group_id int = (SELECT ID FROM ESHOP_GROUP WHERE NAME = 'SYSTEM_ADMIN')
			DECLARE @system_admin_role_id int = (SELECT ID FROM ESHOP_ROLE WHERE NAME = 'SYSTEM_ADMIN')
			
			INSERT INTO GROUP_ROLE(GROUP_ID, ROLE_ID)
			VALUES(@system_admin_group_id, @system_admin_role_id)

			-- Organisation_Group for system admin
			DECLARE @sag_organisation_id int = (SELECT ID FROM ORGANISATION WHERE SHORTNAME = 'sag')
			
			INSERT INTO Organisation_Group(ORGANISATION_ID, GROUP_ID)
			VALUES(@sag_organisation_id, @group_id)

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_RELATION_DATA_FOR_SALES">
        <sql>
            -- ESHOP_GROUP for system sales
			INSERT INTO  dbo.ESHOP_GROUP (NAME, DESCRIPTION)
			VALUES	('SALES_ASSISTANT', 'Sales assistant group')
			
			-- GROUP_ROLE for system sales group
			DECLARE @system_sales_group_id int = (SELECT ID FROM ESHOP_GROUP WHERE NAME = 'SALES_ASSISTANT')
			DECLARE @system_sales_role_id int = (SELECT ID FROM ESHOP_ROLE WHERE NAME = 'SALES_ASSISTANT')
			INSERT INTO GROUP_ROLE(GROUP_ID, ROLE_ID)
			VALUES(@system_sales_group_id, @system_sales_role_id)

			-- Organisation_Group for sales
			DECLARE @sag_organisation_id int = (SELECT ID FROM ORGANISATION WHERE SHORTNAME = 'sag')
			DECLARE @sales_group_id int = (select ID FROM ESHOP_GROUP WHERE NAME ='SALES_ASSISTANT' )
			INSERT INTO Organisation_Group(ORGANISATION_ID, GROUP_ID)
			VALUES(@sag_organisation_id, @sales_group_id)

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ESHOP_PERMISSION">
        <sql>
          INSERT INTO dbo.ESHOP_PERMISSION (PERMISSION,DESCRIPTION,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,PERMISSION_KEY) VALUES 
          ('OFFER','Permission to work with offer module',1,'2018-01-17 15:35:38.213',NULL,NULL,'OFFER')
          ,('HOME','Permission to work with home module',1,'2018-03-22 14:08:47.243',NULL,NULL,'HOME')
          ,('BULB','Permission to work with bulb module',1,'2018-09-12 09:53:27.090',NULL,NULL,'BULB')
          ,('OIL','Permission to work with oil module',1,'2018-09-12 09:53:27.090',NULL,NULL,'OIL')
          ,('BATTERY','Permission to work with oil battery',1,'2018-09-12 09:53:27.093',NULL,NULL,'BATTERY')
          ,('OCI','Permission to work with oci module',1,'2019-05-28 17:30:47.110',NULL,NULL,'OCI')
          ,('WHOLESALER','Permission to work with wholesaler module',NULL,'2019-10-04 19:02:29.913',NULL,NULL,'WHOLESALER')
          ,('DMS','Permission to work with dms module',1,'2019-05-03 10:59:08.623',NULL,NULL,'DMS')
          ,('TYRE','Permission to work with tyre module',NULL,'2019-10-04 19:02:37.047',NULL,NULL,'TYRE')
          ,('HAYNESPRO','Permission to work with haynespro',NULL,'2019-10-04 19:02:44.050',NULL,NULL,'HAYNESPRO')
          
          INSERT INTO dbo.ESHOP_PERMISSION (PERMISSION,DESCRIPTION,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,PERMISSION_KEY) VALUES 
          ('VIN','Permission to work with vin',NULL,'2019-10-04 19:02:44.050',NULL,NULL,'VIN')

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ESHOP_FUNCTION">
        <sql>
          INSERT INTO dbo.ESHOP_FUNCTION (FUNCTION_NAME,DESCRIPTION,RELATIVE_URL) VALUES 
          ('OFFER','Manage offer','/offer**')
          ,('OIL','OIL','/oil**')
          ,('HOME','home','/home**')
          ,('OFFER_DMS_API_ADD_CART_TO_OFFER','Function to add shopping cart to offer','/dms/cart/offer**')
          ,('BULB_API_SEARCH','Function to work with bulb search API at back-end','/search/bulb**')
          ,('BULB_URL_ACCESS','Function to work with bulbs url at front-end','/bulbs')
          ,('OIL_API_SEARCH','Function to work with oil search API at back-end','/search/oil**')
          ,('OIL_URL_ACCESS','Function to work with oil url at front-end','/oil')
          ,('BATTERY_API_SEARCH','Function to work with battery search API at back-end','/search/battery**')
          ,('BATTERY_URL_ACCESS','Function to work with battery url at front-end','/batteries')
          
          INSERT INTO dbo.ESHOP_FUNCTION (FUNCTION_NAME,DESCRIPTION,RELATIVE_URL) VALUES 
          ('OCI','OCI','/oci**')
          ,('WHOLESALER','Function to work with wholesaler','/wholesaler**')
          ,('DMS','DMS','/dms**')
          ,('TYRE_URL_ACCESS','Function to work with tyres url at front-end','/tyres')
          ,('TYRE_API_SEARCH','Function to work with tyre search API at back-end','/search/tyre**')
          ,('HAYNESPRO','Function to work with haynespro','/haynespro**')
          ,('VIN_API_SEARCH','Function to work with vin search API','/gtmotive/vehicle/search-by-vin**')

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_PERM_FUNCTION">
        <sql>
          
          DECLARE @bulbPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'BULB')
          DECLARE @bulbApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'BULB_API_SEARCH')
          DECLARE @bulbUrlAccessFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'BULB_URL_ACCESS')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@bulbPermissionId, @bulbApiSearchFunctionId)
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@bulbPermissionId, @bulbUrlAccessFunctionId)
          
          DECLARE @oilPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'OIL')
          DECLARE @oilApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'OIL_API_SEARCH')
          DECLARE @oilUrlAccessFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'OIL_URL_ACCESS')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@oilPermissionId, @oilApiSearchFunctionId)
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@oilPermissionId, @oilUrlAccessFunctionId)
          
          DECLARE @batteryPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'BATTERY')
          DECLARE @batteryApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'BATTERY_API_SEARCH')
          DECLARE @batteryUrlAccessFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'BATTERY_URL_ACCESS')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@batteryPermissionId, @batteryApiSearchFunctionId)
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@batteryPermissionId, @batteryUrlAccessFunctionId)
          
          
          DECLARE @ociPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'OCI')
          DECLARE @ociApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'OCI')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@ociPermissionId, @ociApiSearchFunctionId)
          
          DECLARE @offerPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'OFFER')
          DECLARE @offerApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'OFFER')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@offerPermissionId, @offerApiSearchFunctionId)
          
          DECLARE @homePermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'HOME')
          DECLARE @homeApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'HOME')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@homePermissionId, @homeApiSearchFunctionId)
          
          DECLARE @wssPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'WHOLESALER')
          DECLARE @wssApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'WHOLESALER')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@wssPermissionId, @wssApiSearchFunctionId)
          
          DECLARE @dmsPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'DMS')
          DECLARE @dmsApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'DMS')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@dmsPermissionId, @dmsApiSearchFunctionId)
          
          DECLARE @tyrePermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'TYRE')
          DECLARE @tyreApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'TYRE_URL_ACCESS')
          DECLARE @tyreUrlSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'TYRE_API_SEARCH')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@tyrePermissionId, @tyreApiSearchFunctionId)
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@tyrePermissionId, @tyreUrlSearchFunctionId)
          
          
          DECLARE @haynesPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'HAYNESPRO')
          DECLARE @haynesApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'HAYNESPRO')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@haynesPermissionId, @haynesApiSearchFunctionId)
          
          DECLARE @vinPermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'VIN')
          DECLARE @vinApiSearchFunctionId INT = (SELECT ID FROM ESHOP_FUNCTION WHERE FUNCTION_NAME = 'VIN_API_SEARCH')
          INSERT INTO PERM_FUNCTION(PERM_ID, FUNCTION_ID) VALUES(@vinPermissionId, @vinApiSearchFunctionId)

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ROLE_PERMISSION">
        <sql>
          -- set home, for sales
          DECLARE @salesRoleId INT = (SELECT ID FROM ESHOP_ROLE WHERE NAME = 'SALES_ASSISTANT')
          DECLARE @homePermissionId INT = (SELECT ID FROM ESHOP_PERMISSION WHERE PERMISSION = 'HOME')
          INSERT INTO ROLE_PERMISSION(ROLE_ID, PERM_ID) VALUES(@salesRoleId, @homePermissionId)

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_PRICE_DISPLAY_TYPE">
        <sql>
          INSERT INTO PRICE_DISPLAY_TYPE(TYPE, DESC_CODE, DESCRIPTION)
          VALUES ('UVPE_OEP_GROSS', 'UVPE_OEP_GROSS', 'UVPE -> OEP -> Gross')

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ADDRESS_TYPE">
        <sql>
          INSERT INTO ADDRESS_TYPE( TYPE, DESCRIPTION)
          VALUES('DEFAULT', 'DEFAULT'),
          ('OFFICE',	'Office'),
          ('BRANCH',	'Branch'),
          ('SHOWROOM',	'Showroom'),
          ('GARAGE',	'Garage'),
          ('DELIVERY',	'Delivery'),
          ('INVOICE',	'Invoice')

        </sql>
    </changeSet>

    <changeSet author="CONNECT_APP" id="ITER_167_INIT_ESHOP_GLOBAL_SETTING_JSON_EVENT">
        <sql>
          INSERT INTO ESHOP_GLOBAL_SETTING(CODE, DESCRIPTION, ENABLED, SETTING_TYPE) VALUES
          ('fulltextsearch','',1,'JSON_EVENT'),
          ('fahrzeugsuche','',1,'JSON_EVENT'),
          ('teilesuche','',1,'JSON_EVENT'),
          ('login_page','',1,'JSON_EVENT'),
          ('tyressearch','',1,'JSON_EVENT'),
          ('batteriessearch','',1,'JSON_EVENT'),
          ('bulbssearch','',1,'JSON_EVENT'),
          ('oilsearch','',1,'JSON_EVENT'),
          ('article_list','',1,'JSON_EVENT'),
          ('shopping_basket','',1,'JSON_EVENT')
          INSERT INTO ESHOP_GLOBAL_SETTING(CODE, DESCRIPTION, ENABLED, SETTING_TYPE) VALUES
          ('coupon','',1,'JSON_EVENT'),
          ('order','',1,'JSON_EVENT'),
          ('article_category','',1,'JSON_EVENT'),
          ('fulltextsearch_return','',1,'JSON_EVENT')

        </sql>
    </changeSet>

</databaseChangeLog>
